INFO  [2022-03-26 10:53:01] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 10:53:01] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 20060 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 10:53:01] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 10:53:03] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 10:53:04] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 10:53:04] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 10:53:04] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 10:53:04] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 10:53:04] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 10:53:04] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 3373 ms
INFO  [2022-03-26 10:53:06] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 10:53:07] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 10:53:07] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 10:53:07] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 7.156 seconds (JVM running for 10.016)
INFO  [2022-03-26 10:53:07] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 11:16:43] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 11:16:44] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 11:16:51] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 11:16:51] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 23712 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 11:16:51] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 11:16:52] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 11:16:53] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 11:16:53] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 11:16:53] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 11:16:53] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 11:16:53] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 11:16:53] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 2088 ms
INFO  [2022-03-26 11:16:55] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 11:16:55] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 11:16:55] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 11:16:55] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.634 seconds (JVM running for 6.73)
INFO  [2022-03-26 11:16:55] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 11:17:00] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 11:17:00] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 11:17:00] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 10 ms
INFO  [2022-03-26 11:18:47] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 11:18:47] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 11:18:47] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 11:18:47] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 11:19:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 11:19:09] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 11:19:12] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 11:19:13] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 11:19:13] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 11:19:13] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:16] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:16] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 11:19:16] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2bc2f580, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7c77acee, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5d3d4564, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1ada7e29, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2608e607]
INFO  [2022-03-26 11:19:16] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 11:19:16] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:18] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:18] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 11:19:18] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@50f8410e
INFO  [2022-03-26 11:19:18] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 11:19:18] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:19] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:19] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 11:19:19] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=256
]
INFO  [2022-03-26 11:19:19] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 11:19:19] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:38] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:38] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 11:19:38] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@6d71394f, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@687839bd, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@21fb8886, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3cc4cff7, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@589b3261]
INFO  [2022-03-26 11:19:38] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 11:19:38] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:41] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:19:41] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 11:19:41] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 11:19:41] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 11:19:41] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:20:04] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:20:04] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 11:20:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 11:20:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 11:20:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:23:22] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:23:22] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 11:23:22] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=GetAttribute
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=1F93B773C78D8D7FE835F5382107CE18509A64C07A47AAB9A6AF03D6DF70FB87
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=2203191703
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 11:23:22] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 11:23:22] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 11:23:22] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : ""
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "2203191703"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "GetAttribute"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "1F93B773C78D8D7FE835F5382107CE18509A64C07A47AAB9A6AF03D6DF70FB87"
      }
    }
  }
}
INFO  [2022-03-26 11:23:22] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 274999ms
INFO  [2022-03-26 11:23:22] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 11:23:22] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 13:06:04] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 13:06:05] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 7760 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 13:06:05] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 13:06:06] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 13:06:07] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 13:06:07] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 13:06:07] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 13:06:07] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 13:06:07] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 13:06:07] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 2229 ms
INFO  [2022-03-26 13:06:08] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 13:06:09] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 13:06:09] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 13:06:09] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.811 seconds (JVM running for 6.91)
INFO  [2022-03-26 13:06:09] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 13:06:12] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 13:06:13] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 13:06:21] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 13:06:21] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 7192 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 13:06:21] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 13:06:22] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 13:06:23] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 13:06:23] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 13:06:23] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 13:06:23] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 13:06:23] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 13:06:23] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 2020 ms
INFO  [2022-03-26 13:06:24] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 13:06:25] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 13:06:25] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 13:06:25] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.516 seconds (JVM running for 6.661)
INFO  [2022-03-26 13:06:25] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 13:06:43] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 13:06:43] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 13:06:43] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 13 ms
INFO  [2022-03-26 13:06:43] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 13:06:43] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:06:43] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 13:06:43] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 13:07:04] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:04] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:07:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@d7c3d5c, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@10a75d16, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@641ae2a4, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1a078e7f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@76fdd6be, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5c986a9a]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 13:07:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:07:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:07] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:07] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfileFunc
INFO  [2022-03-26 13:07:07] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:07] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:07:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:07:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:07:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:07:08] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 13:07:11] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 13:07:14] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01009
INFO  [2022-03-26 13:07:14] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:07:14] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:14] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01009, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 13:07:14] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfileFunc
INFO  [2022-03-26 13:07:14] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:16] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:16] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 13:07:16] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:16] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:07:17] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@a12218c]
INFO  [2022-03-26 13:07:17] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:07:17] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:17] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 13:07:17] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 13:07:17] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6fb3c894, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@55778e0c, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5ec43993, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@124a7953, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@63ccf4e6, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@aa2017d]
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@3494c613
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:07:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1eeb53cb, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1b1ae40, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@42903579, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1dc29c6e, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@5973e116, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@553c97d6]
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=GetAttribute
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=CBF2028A3310B22F6357EDFC24180B39C741DD354FC283CD2D9253ABFF81BABD
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=2203191703
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:07:36] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:07:36] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : ""
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "2203191703"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "GetAttribute"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "CBF2028A3310B22F6357EDFC24180B39C741DD354FC283CD2D9253ABFF81BABD"
      }
    }
  }
}
INFO  [2022-03-26 13:07:36] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 53440ms
INFO  [2022-03-26 13:07:36] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:07:36] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 13:23:14] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 13:23:14] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 22092 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 13:23:14] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 13:23:16] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 13:23:16] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 13:23:17] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 13:23:17] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 13:23:17] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 13:23:17] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 13:23:17] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 2554 ms
INFO  [2022-03-26 13:23:18] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 13:23:19] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 13:23:19] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 13:23:19] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 5.593 seconds (JVM running for 7.852)
INFO  [2022-03-26 13:23:19] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 13:23:25] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 13:23:25] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 13:23:25] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 14 ms
INFO  [2022-03-26 13:23:25] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 13:23:25] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:23:25] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 13:23:25] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2c10f107, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@eaa0f90, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@19f637f5, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@535482a0, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@7867c904, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@266f9f17]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:30] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:23:30] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 13:23:30] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01010
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01010, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@25b8530d]
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@c76f2f8, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@429a2971, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@53558050, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@74d45467, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4f0e8937, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5c4cf006]
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@75c5b3b8
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:23:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@33308791, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@243d4df1, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@736dcd8b, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@727ad74f, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4541da9e, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@b5d4502]
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:23:33] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:24:51] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Create
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=F647AE558F2D5B2A7E901F6A8F4D6E7298D7E31C1062D9954EA2B32A897FF674
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=2203191703
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 13:24:51] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:24:51] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:24:51] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : ""
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "2203191703"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Create"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "F647AE558F2D5B2A7E901F6A8F4D6E7298D7E31C1062D9954EA2B32A897FF674"
      }
    }
  }
}
INFO  [2022-03-26 13:24:51] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 85787ms
INFO  [2022-03-26 13:24:51] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:24:51] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 13:25:00] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 13:25:00] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:25:00] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 13:25:00] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@35e341e3, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3b24a92f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3f1b2a93, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@7a19a314, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@555a19ed, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4b29bfb8]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01011
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01011, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@19f413b2]
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3684f4cb, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1e78a2c4, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3428f829, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@df8049d, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1ccb8b45, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@477e649a]
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@39a43ed9
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@51e20041, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@acd2161, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@34a122ab, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@38ef1391, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@794efcc5, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1a6b1ca4]
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:25:06] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:25:06] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:25:06] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:06] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:25:06] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:28:06] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Create
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=F3CED1EA75EABE0F511DB552901F0C9AED249E1D172FCB8E2D8A5FBD0F01FEB1
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=2203191703
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 13:28:06] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:28:06] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:28:06] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : ""
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "2203191703"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Create"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "F3CED1EA75EABE0F511DB552901F0C9AED249E1D172FCB8E2D8A5FBD0F01FEB1"
      }
    }
  }
}
INFO  [2022-03-26 13:28:06] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 186038ms
INFO  [2022-03-26 13:28:06] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:28:06] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 13:34:42] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 13:34:42] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:34:42] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 13:34:42] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4a9ce203, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@445b1520, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@40648973, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5661f1b, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2847794e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@34a99b73]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01012
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01012, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@74772766]
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6b67e469, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@32e619e1, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7dd6704, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1c1a9952, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@480a6214, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4aa143e5]
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@26a8e8f2
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:34:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@5441aa77, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3b356e46, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@417d4bcc, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@da44d2c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@546f4cfd, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@44384f68]
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:34:49] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:35:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Create
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=FE950A1ABD585873A675524AF5F06460BCC556D1AA73ED70A6922D163B6A9511
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=2203191703
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 13:35:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:35:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:35:47] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : ""
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "2203191703"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Create"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "FE950A1ABD585873A675524AF5F06460BCC556D1AA73ED70A6922D163B6A9511"
      }
    }
  }
}
INFO  [2022-03-26 13:35:47] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 64920ms
INFO  [2022-03-26 13:35:47] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:35:47] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 13:37:34] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 13:37:34] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:37:34] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 13:37:34] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2b89d4b1, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@32d698b2, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3b507f12, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@55c4213b, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@308d5b6e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@369846c5]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01013
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:37:38] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01013, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@7ab132e8]
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@20bd40fb, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@54e78447, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1a9ef66f, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@694bb1a6, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@233b9eec, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4b16f370]
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@265659f3
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:37:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1d1f57ac, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4200e94c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@449d9609, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@10f89f5c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@77bd18d8, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@32b2d5ea]
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:38:02] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:39:46] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Create
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=36192566F67A80FD131E9FF8649CA4CEF22E6B7D4F9C3F0820F1292C8FEF701E
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=2203191703
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 13:39:46] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:39:46] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:39:46] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : ""
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "2203191703"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Create"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "36192566F67A80FD131E9FF8649CA4CEF22E6B7D4F9C3F0820F1292C8FEF701E"
      }
    }
  }
}
INFO  [2022-03-26 13:39:46] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 131871ms
INFO  [2022-03-26 13:39:46] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:39:46] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 13:51:46] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 13:51:46] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 24304 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 13:51:46] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 13:51:48] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 13:51:49] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 13:51:49] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 13:51:49] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 13:51:49] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 13:51:49] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 13:51:49] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 2889 ms
INFO  [2022-03-26 13:51:51] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 13:51:51] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 13:51:51] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 13:51:51] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 6.014 seconds (JVM running for 8.296)
INFO  [2022-03-26 13:51:51] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 13:51:59] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 13:51:59] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 13:51:59] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 18 ms
INFO  [2022-03-26 13:51:59] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 13:51:59] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:51:59] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 13:51:59] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 13:52:04] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:04] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2f0b3987, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@198e84aa, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@9fe6ce4, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4dd70652, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3be6d96e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@56a0a16c]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:52:05] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 13:52:05] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01014
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 13:52:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01014, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@5820fa1a]
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5f88fda8, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@269f6c8b, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7e74b945, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@39aef178, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@21d32e58, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7c75e5dd]
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@697bc52c
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 13:52:19] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@5f482077, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@7a349d05, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4838dd1f, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@78c29ea8, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@6697425f, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3895273d]
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:52:21] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:53:05] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Create
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=8ADD0662401FCF886620BB27B9E50DE72590BC01331F76A944744F38EB35BB0D
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=2203191703
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 13:53:05] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 13:53:05] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 13:53:05] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "2203191703"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Create"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "8ADD0662401FCF886620BB27B9E50DE72590BC01331F76A944744F38EB35BB0D"
      }
    }
  }
}
INFO  [2022-03-26 13:53:05] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 65780ms
INFO  [2022-03-26 13:53:05] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 13:53:05] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 13:58:26] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 13:58:27] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 13:58:27] [] [HikariDataSource.close():350                                ] HikariPool-1 - Shutdown initiated...
INFO  [2022-03-26 13:58:27] [] [HikariDataSource.close():352                                ] HikariPool-1 - Shutdown completed.
INFO  [2022-03-26 14:25:11] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 14:25:11] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 10936 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 14:25:11] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 14:25:12] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 14:25:12] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 14:25:12] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 14:25:12] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 14:25:12] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 14:25:13] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 14:25:13] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 1948 ms
INFO  [2022-03-26 14:25:14] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 14:25:14] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 14:25:14] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 14:25:14] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.136 seconds (JVM running for 5.845)
INFO  [2022-03-26 14:25:14] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 14:25:24] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 14:25:24] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 14:25:24] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 12 ms
INFO  [2022-03-26 14:25:25] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 14:25:25] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 14:25:25] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 14:25:25] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@760e293e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@20034f36, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@42fc3dd3, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2fb4a9da, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@28f422cb, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1234b21c]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 14:25:25] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 14:25:25] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01015
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01015, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@5fb2c10e]
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@53d82bd2, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1aab3a16, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7dbe7aeb, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5e6ec5c3, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4cfaf367, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@fc20b64]
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@294dcc6f
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 14:25:25] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@6c179efc, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@19e95b40, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@61cf7e16, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4f2e367b, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1f9eb11c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4c7ecaf4]
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Create
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=4CF913008749C255ED680ED503DA9B9A922B5660EDEB0494C0D60959C97FC4D1
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648272327412
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 14:25:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:27] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648272327412"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Create"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "4CF913008749C255ED680ED503DA9B9A922B5660EDEB0494C0D60959C97FC4D1"
      }
    }
  }
}
INFO  [2022-03-26 14:25:27] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 2363ms
INFO  [2022-03-26 14:25:27] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 14:25:27] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 14:25:50] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 14:25:50] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 14:25:50] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 14:25:50] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@26fb5d5b, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@283ca7f4, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2c03362b, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6901adcf, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@15ec2431, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@58a2227f]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01016
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01016, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@7d973238]
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@346f562f, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@76a1d909, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@d602f0f, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@49a2ca69, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@732335c, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7fa3cb22]
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@2c99e603
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 14:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@77d2e0ce, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@7133e94b, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4f4400e1, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1ea0190c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@7e945e86, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@108389ae]
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Create
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=0299072A1B184A4F9A28AFBB7AA8CD5FB42E770453235895647937FA733C37CF
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648272351573
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 14:25:51] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:25:51] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648272351573"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Create"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "0299072A1B184A4F9A28AFBB7AA8CD5FB42E770453235895647937FA733C37CF"
      }
    }
  }
}
INFO  [2022-03-26 14:25:51] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 836ms
INFO  [2022-03-26 14:25:51] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 14:25:51] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 14:27:01] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 14:27:02] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 14:27:02] [] [HikariDataSource.close():350                                ] HikariPool-1 - Shutdown initiated...
INFO  [2022-03-26 14:27:02] [] [HikariDataSource.close():352                                ] HikariPool-1 - Shutdown completed.
INFO  [2022-03-26 14:52:47] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 14:52:47] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 2640 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 14:52:47] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 14:52:49] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 14:52:49] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 14:52:49] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 14:52:49] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 14:52:49] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 14:52:49] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 14:52:49] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 1799 ms
INFO  [2022-03-26 14:52:50] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 14:52:51] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 14:52:51] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 14:52:51] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 3.945 seconds (JVM running for 5.777)
INFO  [2022-03-26 14:52:51] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 14:53:30] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 14:53:30] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 14:53:30] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 7 ms
INFO  [2022-03-26 14:53:30] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 14:53:30] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 14:53:30] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "RSA"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "2048"
        }
      },
      "ActivationDate" : {
        "type" : "Datetime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 14:53:30] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():77        ] CreateKeyPairRequest : [
	apiInfo=null
	operation=[

	type=Enumeration
	value=CreateKeyPair
]
	requestPayload=[

	commonAttributes=[

	cryptographicAlgorithm=[

	type=Enumeration
	value=RSA
]
	cryptographicDomainParameters=[

	qlength=[

	type=Integer
	value=2048
]
]
	activationDate=[

	type=Datetime
	value=$NOW-3600
]
]
	privateKeyAttributes=[

	cryptographicUsageMask=[

	type=Integer
	value=DeriveKey Sign
]
]
	publicKeyAttributes=[

	cryptographicUsageMask=[

	type=Integer
	value=DeriveKey Verify
]
]
]
]
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():89        ] privObjectType : PrivateKey
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():90        ] pubObjectType : PublicKey
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():91        ] privUsageMask : DeriveKey Sign
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():92        ] pubUsageMask : DeriveKey Verify
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():93        ] algorithm : RSA
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():94        ] keyLength : 2048
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():95        ] activateDate : $NOW-3600
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():96        ] extractable : 
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():97        ] usageMask bit OR : 201
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():98        ] canExportKey : 1
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5e1d7726, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@74a3a061, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4fe20f15, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@30fb93b8, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@56a76c6, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6ca37ea2]
	keyProfileName=RSA
	description=null
]
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 14:53:31] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 14:53:31] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01017
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01017, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@540099f2]
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():111       ] privKeyProfileId : PRF01017
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():112       ] serviceId : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@dc6cce6, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@52d7abe5, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@12ba099c, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@42a5dd30, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@793f887e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@16d88c3f]
	keyProfileName=RSA
	description=null
]
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01018
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01018, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():121       ] pubKeyProfileId : PRF01018
INFO  [2022-03-26 14:53:31] [] [CreateKeyPairController.createKeyPairController():122       ] serviceId : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@5f0ea7f0
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@12a2360c, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@f7d3d90, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@25663aa8, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4bce49c7, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@48df14e4, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2e2821d2]
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3a0ffdc5, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3360b32, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@337e5784, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5cb7d688, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1913e90e, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2a4f1e85]
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=RSA, 
	keyLength=2048, 
	publicExponent=010001, 
	curve=null
]
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 14:53:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@7c021c7a, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@373c2f2b, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4a2c166c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1c51b4eb, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@70dc9ad7, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@26cfa690]
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@cfa4b53, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1d9d40cb, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@9036b8d, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@52a3a71b, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@c5dcecf, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@7b315c97]
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:35] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=CreateKeyPair
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	privateKeyUniqueIdentifier=[

	type=TextString
	value=70F54BBF9BC24ED210A4ADF8206437764A9FE5920FA0C8B06C04617A8404BD26
]
	publicKeyUniqueIdentifier=[

	type=TextString
	value=70F54BBF9BC24ED210A4ADF8206437764A9FE5920FA0C8B06C04617A8404BD26
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648274016117
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 14:53:36] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 14:53:36] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648274016117"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "CreateKeyPair"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "PrivateKeyUniqueIdentifier" : {
        "type" : "TextString",
        "value" : "72E2AF655FCBBCCE728113691934F96030C52ED452311A33A1E0D45D1D756C67"
      },
      "PublicKeyUniqueIdentifier" : {
        "type" : "TextString",
        "value" : "70F54BBF9BC24ED210A4ADF8206437764A9FE5920FA0C8B06C04617A8404BD26"
      }
    }
  }
}
INFO  [2022-03-26 14:53:36] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 5125ms
INFO  [2022-03-26 14:53:36] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 14:53:36] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 14:53:59] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 14:54:00] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 14:54:00] [] [HikariDataSource.close():350                                ] HikariPool-1 - Shutdown initiated...
INFO  [2022-03-26 14:54:00] [] [HikariDataSource.close():352                                ] HikariPool-1 - Shutdown completed.
INFO  [2022-03-26 15:05:52] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 15:05:52] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 23728 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 15:05:52] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 15:05:54] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 15:05:54] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 15:05:54] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:05:54] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 15:05:54] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 15:05:55] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 15:05:55] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 2259 ms
INFO  [2022-03-26 15:05:56] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:05:56] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:05:56] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 15:05:56] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.902 seconds (JVM running for 7.025)
INFO  [2022-03-26 15:05:56] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 15:06:24] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 15:06:24] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 15:06:24] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 14 ms
INFO  [2022-03-26 15:06:40] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 15:06:40] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 15:06:40] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 15:06:40] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@78cd79ac, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4860d229, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@54195fbe, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@231d6b27, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@300e76f1, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@7eb11b43]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 15:06:40] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 15:06:41] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01019
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01019, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@1220b299]
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@11b117a8, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@190fed9c, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@18e55c63, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4a17877a, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5302c5c7, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3507b136]
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@71e99e6a
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 15:06:41] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@7131c483, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@77aeb9a, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@367544, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2549d87b, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@5aa3158d, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@a551378]
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 15:06:43] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:07:29] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:07:29] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 15:07:33] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Create
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=EA14ACA78706BA40C0E13DF3487E1F21EF82E6B312E58F3032F5FD406ED1E5CB
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648274849038
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 15:07:33] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 15:07:33] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:07:33] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648274849038"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Create"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "EA14ACA78706BA40C0E13DF3487E1F21EF82E6B312E58F3032F5FD406ED1E5CB"
      }
    }
  }
}
INFO  [2022-03-26 15:07:33] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 52252ms
INFO  [2022-03-26 15:07:33] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 15:07:33] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 15:14:47] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 15:14:47] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 23200 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 15:14:47] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 15:14:49] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 15:14:49] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 15:14:49] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:14:49] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 15:14:49] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 15:14:49] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 15:14:49] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 1989 ms
INFO  [2022-03-26 15:14:51] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:14:51] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:14:51] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 15:14:51] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.454 seconds (JVM running for 6.344)
INFO  [2022-03-26 15:14:51] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 15:15:20] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 15:15:20] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 15:15:20] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 12 ms
INFO  [2022-03-26 15:15:20] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 15:15:20] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: GetAttributeController.getAttributeController()
INFO  [2022-03-26 15:15:20] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "GetAttribute"
  },
  "RequestPayload" : {
    "UniqueIdentifier" : {
      "type" : "TextString",
      "value" : "E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD"
    }
  }
}
INFO  [2022-03-26 15:15:20] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 15:15:20] [] [GetAttributeController.getAttributeController():69          ] GetAttributeRequest : [
	apiInfo=null
	operation=[

	type=Enumeration
	value=GetAttribute
]
	requestPayload=[

	uniqueIdentifier=[

	type=TextString
	value=E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD
]
]
]
INFO  [2022-03-26 15:15:20] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:20] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: GetAttributeService.selectKeyList
INFO  [2022-03-26 15:15:20] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 15:15:21] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.KeyListVo@3672462f
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : GetAttributeService.selectKeyList
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():73          ] keyList Profile ID : PRF01007
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectKeyProfileService.selectKeyProfileInfo
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.keyprofile.vo.KeyProfileInfoVo@6207411a]
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectKeyProfileService.selectKeyProfileInfo
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectKeyProfileService.selectAllKeyProfileAttrList
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@74bed655, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@34286542, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6cffed4c, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@71b1fac5, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@73bf86d8, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@44aff98]
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectKeyProfileService.selectAllKeyProfileAttrList
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : canExportKey 1
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : Extractable
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : cryptographicAlgorithm AES
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicAlgorithm
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyLength 256
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicLength
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyObjectType TP.KEY.03
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : ObjectType
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyUsageMask 20c
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicUsageMask
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : publicExponent 010001
INFO  [2022-03-26 15:15:21] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : Nothing
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=GetAttribute
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	uniqueIdentifier=[

	type=TextString
	value=E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD
]
	attributes=[

	extractable=[

	type=Extractable
	value=TRUE
]
	cryptographicAlgorithm=[

	type=CryptographicAlgorithm
	value=AES
]
	cryptographicLength=[

	type=CryptographicLength
	value=256
]
	objectType=[

	type=ObjectType
	value=SymmetricKey
]
	cryptographicUsageMask=[

	type=CryptographicUsageMask
	value=Encrypt Decrypt DeriveKey 
]
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648275321112
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 15:15:21] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:21] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648275321112"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "GetAttribute"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD"
      },
      "Attributes" : {
        "Extractable" : {
          "type" : "Extractable",
          "value" : "TRUE"
        },
        "CryptographicAlgorithm" : {
          "type" : "CryptographicAlgorithm",
          "value" : "AES"
        },
        "CryptographicLength" : {
          "type" : "CryptographicLength",
          "value" : "256"
        },
        "ObjectType" : {
          "type" : "ObjectType",
          "value" : "SymmetricKey"
        },
        "CryptographicUsageMask" : {
          "type" : "CryptographicUsageMask",
          "value" : "Encrypt Decrypt DeriveKey "
        }
      }
    }
  }
}
INFO  [2022-03-26 15:15:21] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 221ms
INFO  [2022-03-26 15:15:21] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : GetAttributeController.getAttributeController()
INFO  [2022-03-26 15:15:21] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 15:15:29] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 15:15:29] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: GetAttributeController.getAttributeController()
INFO  [2022-03-26 15:15:29] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "GetAttribute"
  },
  "RequestPayload" : {
    "UniqueIdentifier" : {
      "type" : "TextString",
      "value" : "E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD"
    }
  }
}
INFO  [2022-03-26 15:15:29] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():69          ] GetAttributeRequest : [
	apiInfo=null
	operation=[

	type=Enumeration
	value=GetAttribute
]
	requestPayload=[

	uniqueIdentifier=[

	type=TextString
	value=E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD
]
]
]
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: GetAttributeService.selectKeyList
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.KeyListVo@413f810c
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : GetAttributeService.selectKeyList
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():73          ] keyList Profile ID : PRF01007
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectKeyProfileService.selectKeyProfileInfo
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.keyprofile.vo.KeyProfileInfoVo@4ff8675b]
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectKeyProfileService.selectKeyProfileInfo
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectKeyProfileService.selectAllKeyProfileAttrList
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4bc7ea7c, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@ec56d60, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@33cfba55, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3f81c1c8, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4b61484e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6eea922f]
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectKeyProfileService.selectAllKeyProfileAttrList
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : canExportKey 1
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : Extractable
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : cryptographicAlgorithm AES
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicAlgorithm
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyLength 256
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicLength
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyObjectType TP.KEY.03
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : ObjectType
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyUsageMask 20c
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicUsageMask
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : publicExponent 010001
INFO  [2022-03-26 15:15:29] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : Nothing
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=GetAttribute
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	uniqueIdentifier=[

	type=TextString
	value=E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD
]
	attributes=[

	extractable=[

	type=Extractable
	value=TRUE
]
	cryptographicAlgorithm=[

	type=CryptographicAlgorithm
	value=AES
]
	cryptographicLength=[

	type=CryptographicLength
	value=256
]
	objectType=[

	type=ObjectType
	value=SymmetricKey
]
	cryptographicUsageMask=[

	type=CryptographicUsageMask
	value=Encrypt Decrypt DeriveKey 
]
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648275329754
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 15:15:29] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:15:29] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648275329754"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "GetAttribute"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD"
      },
      "Attributes" : {
        "Extractable" : {
          "type" : "Extractable",
          "value" : "TRUE"
        },
        "CryptographicAlgorithm" : {
          "type" : "CryptographicAlgorithm",
          "value" : "AES"
        },
        "CryptographicLength" : {
          "type" : "CryptographicLength",
          "value" : "256"
        },
        "ObjectType" : {
          "type" : "ObjectType",
          "value" : "SymmetricKey"
        },
        "CryptographicUsageMask" : {
          "type" : "CryptographicUsageMask",
          "value" : "Encrypt Decrypt DeriveKey "
        }
      }
    }
  }
}
INFO  [2022-03-26 15:15:29] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 35ms
INFO  [2022-03-26 15:15:29] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : GetAttributeController.getAttributeController()
INFO  [2022-03-26 15:15:29] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 15:15:35] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 15:15:36] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:15:36] [] [HikariDataSource.close():350                                ] HikariPool-1 - Shutdown initiated...
INFO  [2022-03-26 15:15:36] [] [HikariDataSource.close():352                                ] HikariPool-1 - Shutdown completed.
INFO  [2022-03-26 15:22:04] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 15:22:04] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 17492 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 15:22:04] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 15:22:05] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 15:22:05] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 15:22:05] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:22:05] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 15:22:05] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 15:22:06] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 15:22:06] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 1813 ms
INFO  [2022-03-26 15:22:07] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:22:07] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:22:07] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 15:22:07] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 3.895 seconds (JVM running for 5.681)
INFO  [2022-03-26 15:22:07] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 15:22:12] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 15:22:13] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:24:37] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 15:24:37] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 20580 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 15:24:37] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 15:24:38] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 15:24:39] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 15:24:39] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:24:39] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 15:24:39] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 15:24:39] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 15:24:39] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 1796 ms
INFO  [2022-03-26 15:24:40] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:24:40] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:24:40] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 15:24:40] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 3.841 seconds (JVM running for 5.618)
INFO  [2022-03-26 15:24:40] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 15:24:44] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 15:24:45] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:25:05] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 15:25:05] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 24108 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 15:25:05] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 15:25:05] [] [AbstractApplicationContext.refresh():559                    ] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.tmonet.kms.mgmt.ManagementServerApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'symmetricKeyController' for bean class [com.tmonet.kmsp.register.controller.SymmetricKeyController] conflicts with existing, non-compatible bean definition of same name and class [com.tmonet.kmsp.create.controller.SymmetricKeyController]
ERROR [2022-03-26 15:25:05] [] [SpringApplication.reportFailure():837                       ] Application run failed
org.springframework.beans.factory.BeanDefinitionStoreException: Failed to parse configuration class [com.tmonet.kms.mgmt.ManagementServerApplication]; nested exception is org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'symmetricKeyController' for bean class [com.tmonet.kmsp.register.controller.SymmetricKeyController] conflicts with existing, non-compatible bean definition of same name and class [com.tmonet.kmsp.create.controller.SymmetricKeyController]
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:189)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:319)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:236)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:280)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:96)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:707)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:533)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:143)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:758)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:750)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:405)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1237)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at com.tmonet.kms.mgmt.ManagementServerApplication.main(ManagementServerApplication.java:23)
Caused by: org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name 'symmetricKeyController' for bean class [com.tmonet.kmsp.register.controller.SymmetricKeyController] conflicts with existing, non-compatible bean definition of same name and class [com.tmonet.kmsp.create.controller.SymmetricKeyController]
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.checkCandidate(ClassPathBeanDefinitionScanner.java:349)
	at org.springframework.context.annotation.ClassPathBeanDefinitionScanner.doScan(ClassPathBeanDefinitionScanner.java:287)
	at org.springframework.context.annotation.ComponentScanAnnotationParser.parse(ComponentScanAnnotationParser.java:132)
	at org.springframework.context.annotation.ConfigurationClassParser.doProcessConfigurationClass(ConfigurationClassParser.java:296)
	at org.springframework.context.annotation.ConfigurationClassParser.processConfigurationClass(ConfigurationClassParser.java:250)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:207)
	at org.springframework.context.annotation.ConfigurationClassParser.parse(ConfigurationClassParser.java:175)
	... 14 common frames omitted
INFO  [2022-03-26 15:25:27] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 15:25:27] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 23032 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 15:25:27] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 15:25:29] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 15:25:29] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 15:25:29] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:25:29] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 15:25:29] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 15:25:29] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 15:25:29] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 1796 ms
INFO  [2022-03-26 15:25:30] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:25:31] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:25:31] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 15:25:31] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 3.829 seconds (JVM running for 5.689)
INFO  [2022-03-26 15:25:31] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 15:25:35] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 15:25:36] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:27:17] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 15:27:17] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 3272 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 15:27:17] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 15:27:19] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 15:27:19] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 15:27:19] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:27:19] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 15:27:19] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 15:27:19] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 15:27:19] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 1805 ms
INFO  [2022-03-26 15:27:20] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:27:21] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:27:21] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 15:27:21] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 3.878 seconds (JVM running for 5.631)
INFO  [2022-03-26 15:27:21] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 15:29:35] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 15:29:36] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:29:39] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 15:29:39] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 3480 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 15:29:39] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 15:29:40] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 15:29:41] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 15:29:41] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:29:41] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 15:29:41] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 15:29:41] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 15:29:41] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 1997 ms
INFO  [2022-03-26 15:29:42] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:29:43] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:29:43] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 15:29:43] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.082 seconds (JVM running for 5.815)
INFO  [2022-03-26 15:29:43] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 15:29:45] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 15:29:46] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:29:53] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 15:29:53] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 1784 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 15:29:53] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 15:29:55] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 15:29:55] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 15:29:55] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:29:55] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 15:29:55] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 15:29:55] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 15:29:55] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 1862 ms
INFO  [2022-03-26 15:29:56] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:29:57] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:29:57] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 15:29:57] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 3.945 seconds (JVM running for 5.76)
INFO  [2022-03-26 15:29:57] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 15:30:02] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 15:30:03] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:41:20] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 15:41:20] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 24220 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 15:41:20] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 15:41:22] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 15:41:22] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 15:41:22] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:41:22] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 15:41:22] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 15:41:22] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 15:41:22] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 2050 ms
INFO  [2022-03-26 15:41:24] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:41:24] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 15:41:24] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 15:41:24] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.603 seconds (JVM running for 6.668)
INFO  [2022-03-26 15:41:24] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 15:41:33] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 15:41:33] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 15:41:33] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 13 ms
INFO  [2022-03-26 15:41:34] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 15:41:34] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: RegisterSymmKeyController.registerSymmetricKey()
INFO  [2022-03-26 15:41:34] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Register"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "Encrypt Decrypt DeriveKey"
      },
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "256"
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "2022.03.10.10.45-3600"
      }
    },
    "SymmetricKey" : {
      "KeyBlock" : {
        "KeyFormatType" : {
          "type" : "Enumeration",
          "value" : "Raw"
        },
        "KeyValue" : {
          "KeyMaterial" : {
            "type" : "ByteString",
            "value" : "7352CB3D949BD6F285E0AB10D020EA6E7352CB3D949BD6F2"
          }
        },
        "CryptographicAlgorithm" : {
          "type" : "Enumeration",
          "value" : "AES"
        },
        "CryptographicLength" : {
          "type" : "Integer",
          "value" : "256"
        }
      }
    }
  }
}
INFO  [2022-03-26 15:41:34] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (java.lang.String) : SymmetricKey
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@f5f9240, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2dc87e2f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@172a8551, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1cf096ec, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6f4edaa0, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@119f860]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 15:41:34] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 15:41:34] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01020
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01020, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@7e900875]
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [RegisterSymmKeyController.registerSymmetricKey():87         ] keyProfileId : PRF01020
INFO  [2022-03-26 15:41:34] [] [RegisterSymmKeyController.registerSymmetricKey():88         ] serviceId : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@6b30ccbc
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@a6d78a7, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@423bb9d3, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2f83d804, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@57769a31, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@363f7838, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@29d5ba0d]
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.makeHsmImportSymmetricKeyRequestData
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.02, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	symmetricKeyData=7352CB3D949BD6F285E0AB10D020EA6E7352CB3D949BD6F2, 
	keyEncryptionKeyId=null, 
	cryptographicParameter=null
]
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.makeHsmImportSymmetricKeyRequestData
INFO  [2022-03-26 15:41:34] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@345f607b, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4723a754, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@6c0f4fc7, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1486ee10, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@5b951843, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1d61d62]
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Register
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	uniqueIdentifier=[

	type=TextString
	value=EFBE1E8AAEC866EDD8E3B22931A83BAE1334D1441F768C0E51D2202A84F96210
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648276897636
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 15:41:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 15:41:37] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648276897636"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Register"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "EFBE1E8AAEC866EDD8E3B22931A83BAE1334D1441F768C0E51D2202A84F96210"
      }
    }
  }
}
INFO  [2022-03-26 15:41:37] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 3563ms
INFO  [2022-03-26 15:41:37] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : RegisterSymmKeyController.registerSymmetricKey()
INFO  [2022-03-26 15:41:37] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 15:41:56] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 15:41:57] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 15:41:57] [] [HikariDataSource.close():350                                ] HikariPool-1 - Shutdown initiated...
INFO  [2022-03-26 15:41:57] [] [HikariDataSource.close():352                                ] HikariPool-1 - Shutdown completed.
INFO  [2022-03-26 16:06:50] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 16:06:50] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 20236 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 16:06:50] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 16:06:51] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 16:06:52] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 16:06:52] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 16:06:52] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 16:06:52] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 16:06:52] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 16:06:52] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 2092 ms
INFO  [2022-03-26 16:06:54] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 16:06:54] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 16:06:54] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 16:06:54] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.62 seconds (JVM running for 6.538)
INFO  [2022-03-26 16:06:54] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 16:08:47] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 16:08:47] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 16:08:47] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 9 ms
INFO  [2022-03-26 16:08:47] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:08:47] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: RegisterSymmKeyController.registerSymmetricKey()
INFO  [2022-03-26 16:08:47] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Register"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "Encrypt Decrypt DeriveKey"
      },
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "256"
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "2022.03.10.10.45-3600"
      }
    },
    "SymmetricKey" : {
      "KeyBlock" : {
        "KeyFormatType" : {
          "type" : "Enumeration",
          "value" : "Raw"
        },
        "KeyValue" : {
          "KeyMaterial" : {
            "type" : "ByteString",
            "value" : "7352CB3D949BD6F285E0AB10D020EA6E7352CB3D949BD6F2"
          }
        },
        "CryptographicAlgorithm" : {
          "type" : "Enumeration",
          "value" : "AES"
        },
        "CryptographicLength" : {
          "type" : "Integer",
          "value" : "256"
        }
      }
    }
  }
}
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1461e87a, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2f948eb9, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5fa9a646, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@7951e959, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6268fc31, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@69825783]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:08:47] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 16:08:47] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01021
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01021, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@27797602]
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [RegisterSymmKeyController.registerSymmetricKey():84         ] keyProfileId : PRF01021
INFO  [2022-03-26 16:08:47] [] [RegisterSymmKeyController.registerSymmetricKey():85         ] serviceId : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@8c6a69d
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7adff77d, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1abbbb46, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@27f404c2, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5baca4cd, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5e4dd4da, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@19eb25de]
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.makeHsmImportSymmetricKeyRequestData
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.02, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	symmetricKeyData=7352CB3D949BD6F285E0AB10D020EA6E7352CB3D949BD6F2, 
	keyEncryptionKeyId=null, 
	cryptographicParameter=null
]
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.makeHsmImportSymmetricKeyRequestData
INFO  [2022-03-26 16:08:47] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3aa50bc8, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@29f928c6, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@7e20c7ff, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3ec64318, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2caff443, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4c704608]
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Register
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	uniqueIdentifier=[

	type=TextString
	value=95ABF8EB8F6B48569D3508A9524F2F113645E97EBBFD5E51564CCA73DFE31046
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648278530974
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:08:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:08:50] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648278530974"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Register"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "95ABF8EB8F6B48569D3508A9524F2F113645E97EBBFD5E51564CCA73DFE31046"
      }
    }
  }
}
INFO  [2022-03-26 16:08:50] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 3357ms
INFO  [2022-03-26 16:08:50] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : RegisterSymmKeyController.registerSymmetricKey()
INFO  [2022-03-26 16:08:50] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 16:09:03] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:09:03] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: RegisterSymmKeyController.registerSymmetricKey()
INFO  [2022-03-26 16:09:03] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Register"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "Encrypt Decrypt DeriveKey"
      },
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "256"
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "2022.03.10.10.45-3600"
      }
    },
    "SymmetricKey" : {
      "KeyBlock" : {
        "KeyFormatType" : {
          "type" : "Enumeration",
          "value" : "Raw"
        },
        "KeyValue" : {
          "KeyMaterial" : {
            "type" : "ByteString",
            "value" : "7352CB3D949BD6F285E0AB10D020EA6E7352CB3D949BD6F2"
          }
        },
        "CryptographicAlgorithm" : {
          "type" : "Enumeration",
          "value" : "AES"
        },
        "CryptographicLength" : {
          "type" : "Integer",
          "value" : "256"
        }
      }
    }
  }
}
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@31f1da33, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@16d0235d, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@aed1f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6ec14ad5, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@51de257c, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@46032ed1]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01022
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01022, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@5590180b]
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [RegisterSymmKeyController.registerSymmetricKey():84         ] keyProfileId : PRF01022
INFO  [2022-03-26 16:09:03] [] [RegisterSymmKeyController.registerSymmetricKey():85         ] serviceId : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@abad1ce
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@750e7143, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@200b6fa9, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7c63fec7, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6a6a41ef, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6ce8a188, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@17e5fd9b]
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.makeHsmImportSymmetricKeyRequestData
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.02, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	symmetricKeyData=7352CB3D949BD6F285E0AB10D020EA6E7352CB3D949BD6F2, 
	keyEncryptionKeyId=null, 
	cryptographicParameter=null
]
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.makeHsmImportSymmetricKeyRequestData
INFO  [2022-03-26 16:09:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@5db2d2dc, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@342b3590, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@faff249, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@75c0940c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3e2f9c5a, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@5345a9ba]
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Register
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	uniqueIdentifier=[

	type=TextString
	value=40461E9D3C052235C598A25D96D21B3802403BDAD22AAE04D085010AD77CE544
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648278544987
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:09:04] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:04] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648278544987"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Register"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "40461E9D3C052235C598A25D96D21B3802403BDAD22AAE04D085010AD77CE544"
      }
    }
  }
}
INFO  [2022-03-26 16:09:04] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 1886ms
INFO  [2022-03-26 16:09:04] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : RegisterSymmKeyController.registerSymmetricKey()
INFO  [2022-03-26 16:09:04] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 16:09:40] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:09:40] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: GetAttributeController.getAttributeController()
INFO  [2022-03-26 16:09:40] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "GetAttribute"
  },
  "RequestPayload" : {
    "UniqueIdentifier" : {
      "type" : "TextString",
      "value" : "E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD"
    }
  }
}
INFO  [2022-03-26 16:09:40] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():69          ] GetAttributeRequest : [
	apiInfo=null
	operation=[

	type=Enumeration
	value=GetAttribute
]
	requestPayload=[

	uniqueIdentifier=[

	type=TextString
	value=E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD
]
]
]
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: GetAttributeService.selectKeyList
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.KeyListVo@442e4ae3
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : GetAttributeService.selectKeyList
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():73          ] keyList Profile ID : PRF01007
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectKeyProfileService.selectKeyProfileInfo
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.keyprofile.vo.KeyProfileInfoVo@618faa9c]
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectKeyProfileService.selectKeyProfileInfo
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectKeyProfileService.selectAllKeyProfileAttrList
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5088ca2d, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@31271b3a, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2de08cc8, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@741479ed, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@625b1ce0, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6bac255a]
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectKeyProfileService.selectAllKeyProfileAttrList
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : canExportKey 1
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : Extractable
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : cryptographicAlgorithm AES
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicAlgorithm
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyLength 256
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicLength
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyObjectType TP.KEY.03
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : ObjectType
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyUsageMask 20c
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicUsageMask
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : publicExponent 010001
INFO  [2022-03-26 16:09:40] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : Nothing
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=GetAttribute
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	uniqueIdentifier=[

	type=TextString
	value=E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD
]
	attributes=[

	extractable=[

	type=Extractable
	value=TRUE
]
	cryptographicAlgorithm=[

	type=CryptographicAlgorithm
	value=AES
]
	cryptographicLength=[

	type=CryptographicLength
	value=256
]
	objectType=[

	type=ObjectType
	value=SymmetricKey
]
	cryptographicUsageMask=[

	type=CryptographicUsageMask
	value=Encrypt Decrypt DeriveKey 
]
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648278580805
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:09:40] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:09:40] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648278580805"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "GetAttribute"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "E0DA79290C77065294AED86F6E8BAC36A0168342875FA79766B117BC6AF536BD"
      },
      "Attributes" : {
        "Extractable" : {
          "type" : "Extractable",
          "value" : "TRUE"
        },
        "CryptographicAlgorithm" : {
          "type" : "CryptographicAlgorithm",
          "value" : "AES"
        },
        "CryptographicLength" : {
          "type" : "CryptographicLength",
          "value" : "256"
        },
        "ObjectType" : {
          "type" : "ObjectType",
          "value" : "SymmetricKey"
        },
        "CryptographicUsageMask" : {
          "type" : "CryptographicUsageMask",
          "value" : "Encrypt Decrypt DeriveKey "
        }
      }
    }
  }
}
INFO  [2022-03-26 16:09:40] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 45ms
INFO  [2022-03-26 16:09:40] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : GetAttributeController.getAttributeController()
INFO  [2022-03-26 16:09:40] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 16:10:08] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:10:08] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:10:08] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "RSA"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "2048"
        }
      },
      "ActivationDate" : {
        "type" : "Datetime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 16:10:08] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4f959df9, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@131a0398, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@17ccb982, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@37088aaf, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5491b3e2, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@17547c2b]
	keyProfileName=RSA
	description=null
]
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01023
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01023, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@6870428d]
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@16c64cbe, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@c35714f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@74f2c17, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6dc17259, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@494660e3, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6ededf8d]
	keyProfileName=RSA
	description=null
]
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01024
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01024, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@c01b56b
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7f5be0a0, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@38a37162, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@769548d6, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7373986, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@27499720, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@442caca]
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@58cdf16c, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@660818fa, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@d13638c, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1f95ec7e, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@28642871, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@e0d2a4f]
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=RSA, 
	keyLength=2048, 
	publicExponent=010001, 
	curve=null
]
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:10:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@7e59037e, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4fd74fdb, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3d3eddf0, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1d16cb19, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2be26936, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@5ebe5206]
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@15a4c57c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3ec18ad2, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@652ffe5, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2a50b34b, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@19ec1c58, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2b4992ad]
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:11] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=CreateKeyPair
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	privateKeyUniqueIdentifier=[

	type=TextString
	value=6583BDA37E54F862611FB98632DFCDB2A9092551389873EDD86012C913D884FF
]
	publicKeyUniqueIdentifier=[

	type=TextString
	value=6583BDA37E54F862611FB98632DFCDB2A9092551389873EDD86012C913D884FF
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648278612114
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:10:12] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:12] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648278612114"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "CreateKeyPair"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "PrivateKeyUniqueIdentifier" : {
        "type" : "TextString",
        "value" : "B63AA00FCA776CAD7ACAB84D3E983702588941EEFBFBC05C2E8B0DCA1716FBB7"
      },
      "PublicKeyUniqueIdentifier" : {
        "type" : "TextString",
        "value" : "6583BDA37E54F862611FB98632DFCDB2A9092551389873EDD86012C913D884FF"
      }
    }
  }
}
INFO  [2022-03-26 16:10:12] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 3511ms
INFO  [2022-03-26 16:10:12] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:10:12] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 16:10:50] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:10:50] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateSymmKeyController.createSymmetricKey()
INFO  [2022-03-26 16:10:50] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 16:10:50] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5df1a456, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@18f3318c, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@19aad4b, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@29212d4c, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@79a2ef2a, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@78dccec3]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01025
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01025, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@c13c7e8]
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7c92d2be, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@162362be, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@49dcb15, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@537b3023, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@39160fd0, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@342dbcde]
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@5e820c2d
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@458df5a6, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@6e140c1a, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@7ea77012, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1c694ae6, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@36e3bc08, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@78591212]
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 16:10:51] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:10:51] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 16:10:51] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:51] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:51] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:10:51] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Create
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=CE918A3D51AEC7A0B195B51C0C4418065192E0A987CCFBCA4B6F8282A5BEF805
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648278651008
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 16:10:51] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:10:51] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:10:51] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648278651008"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Create"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "CE918A3D51AEC7A0B195B51C0C4418065192E0A987CCFBCA4B6F8282A5BEF805"
      }
    }
  }
}
INFO  [2022-03-26 16:10:51] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 835ms
INFO  [2022-03-26 16:10:51] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : CreateSymmKeyController.createSymmetricKey()
INFO  [2022-03-26 16:10:51] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 16:12:12] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:12:12] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: GetAttributeController.getAttributeController()
INFO  [2022-03-26 16:12:12] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "GetAttributes"
  },
  "RequestPayload" : {
    "UniqueIdentifier" : {
      "type" : "TextString",
      "value" : "91D7FB5B35B64D3759757739A5272CD8CAB04EB79C853B43ABD8D68D91DAC16B"
    }
  }
}
INFO  [2022-03-26 16:12:12] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():69          ] GetAttributeRequest : [
	apiInfo=null
	operation=[

	type=Enumeration
	value=GetAttributes
]
	requestPayload=[

	uniqueIdentifier=[

	type=TextString
	value=91D7FB5B35B64D3759757739A5272CD8CAB04EB79C853B43ABD8D68D91DAC16B
]
]
]
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: GetAttributeService.selectKeyList
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.KeyListVo@2ab2a3c6
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : GetAttributeService.selectKeyList
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():73          ] keyList Profile ID : PRF00060
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectKeyProfileService.selectKeyProfileInfo
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.keyprofile.vo.KeyProfileInfoVo@2e8d3248]
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectKeyProfileService.selectKeyProfileInfo
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectKeyProfileService.selectAllKeyProfileAttrList
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6b8fa9fd, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@65bd912d, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5a2ea2cf, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1df6c4b0, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@ba056b2]
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectKeyProfileService.selectAllKeyProfileAttrList
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : canExportKey 1
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : Extractable
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : cryptographicAlgorithm AES
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicAlgorithm
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyLength 256
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicLength
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyObjectType TP.KEY.03
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : ObjectType
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():131         ] keyAttribute : keyUsageMask cc
INFO  [2022-03-26 16:12:12] [] [GetAttributeController.getAttributeController():134         ] KMIPAttName : CryptographicUsageMask
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=GetAttributes
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	uniqueIdentifier=[

	type=TextString
	value=91D7FB5B35B64D3759757739A5272CD8CAB04EB79C853B43ABD8D68D91DAC16B
]
	attributes=[

	extractable=[

	type=Extractable
	value=TRUE
]
	cryptographicAlgorithm=[

	type=CryptographicAlgorithm
	value=AES
]
	cryptographicLength=[

	type=CryptographicLength
	value=256
]
	objectType=[

	type=ObjectType
	value=SymmetricKey
]
	cryptographicUsageMask=[

	type=CryptographicUsageMask
	value=Encrypt Decrypt MacGenerate 
]
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648278732344
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:12:12] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:12] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648278732344"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "GetAttributes"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "91D7FB5B35B64D3759757739A5272CD8CAB04EB79C853B43ABD8D68D91DAC16B"
      },
      "Attributes" : {
        "Extractable" : {
          "type" : "Extractable",
          "value" : "TRUE"
        },
        "CryptographicAlgorithm" : {
          "type" : "CryptographicAlgorithm",
          "value" : "AES"
        },
        "CryptographicLength" : {
          "type" : "CryptographicLength",
          "value" : "256"
        },
        "ObjectType" : {
          "type" : "ObjectType",
          "value" : "SymmetricKey"
        },
        "CryptographicUsageMask" : {
          "type" : "CryptographicUsageMask",
          "value" : "Encrypt Decrypt MacGenerate "
        }
      }
    }
  }
}
INFO  [2022-03-26 16:12:12] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 32ms
INFO  [2022-03-26 16:12:12] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : GetAttributeController.getAttributeController()
INFO  [2022-03-26 16:12:12] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 16:12:27] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:12:27] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: RegisterSymmKeyController.registerSymmetricKey()
INFO  [2022-03-26 16:12:27] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Register"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "Encrypt Decrypt DeriveKey"
      },
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "256"
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "2022.03.10.10.45-3600"
      }
    },
    "SymmetricKey" : {
      "KeyBlock" : {
        "KeyFormatType" : {
          "type" : "Enumeration",
          "value" : "Raw"
        },
        "KeyValue" : {
          "KeyMaterial" : {
            "type" : "ByteString",
            "value" : "7352CB3D949BD6F285E0AB10D020EA6E7352CB3D949BD6F2"
          }
        },
        "CryptographicAlgorithm" : {
          "type" : "Enumeration",
          "value" : "AES"
        },
        "CryptographicLength" : {
          "type" : "Integer",
          "value" : "256"
        }
      }
    }
  }
}
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@62c0e784, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6c0705ac, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@68388cf4, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2d3a0f97, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@48233173, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1c5d67be]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01026
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01026, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@4d15f0d8]
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [RegisterSymmKeyController.registerSymmetricKey():84         ] keyProfileId : PRF01026
INFO  [2022-03-26 16:12:27] [] [RegisterSymmKeyController.registerSymmetricKey():85         ] serviceId : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@1c6ce8a0
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6b7b1c04, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2baaefe9, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@495b4974, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@32098117, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@121206e, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7d884204]
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.makeHsmImportSymmetricKeyRequestData
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.02, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	symmetricKeyData=7352CB3D949BD6F285E0AB10D020EA6E7352CB3D949BD6F2, 
	keyEncryptionKeyId=null, 
	cryptographicParameter=null
]
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.makeHsmImportSymmetricKeyRequestData
INFO  [2022-03-26 16:12:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@27f9088a, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@14e0c2b9, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@20ae934b, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4f100ff0, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2042f3c0, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@32a5087b]
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Register
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	uniqueIdentifier=[

	type=TextString
	value=6E269AD25CE1414B18C809401F344CB608F21F14C9711DEDB133868D3A3BED10
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648278749288
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:12:29] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:29] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648278749288"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Register"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "6E269AD25CE1414B18C809401F344CB608F21F14C9711DEDB133868D3A3BED10"
      }
    }
  }
}
INFO  [2022-03-26 16:12:29] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 1928ms
INFO  [2022-03-26 16:12:29] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : RegisterSymmKeyController.registerSymmetricKey()
INFO  [2022-03-26 16:12:29] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 16:12:39] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:12:39] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateSymmKeyController.createSymmetricKey()
INFO  [2022-03-26 16:12:39] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "Create"
  },
  "RequestPayload" : {
    "ObjectType" : {
      "type" : "Enumeration",
      "value" : "SymmetricKey"
    },
    "Attributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "AES"
      },
      "CryptographicLength" : {
        "type" : "Integer",
        "value" : "128"
      }
    }
  }
}
INFO  [2022-03-26 16:12:39] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@59706da7, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@57b788f9, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@538806d7, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@168a82c2, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4ccdc8e1, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@27d671c1]
	keyProfileName=AES
	description=null
]
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01027
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01027, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@76a57d8d]
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@540d2978, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@40411241, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2f7faeee, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@72ebe799, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4f104655, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@70b96ec]
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@5551403d
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	keyLength=128
]
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 16:12:39] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@31acc87c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@14b35ed2, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2ed0dc2, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@755082e7, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@22685b19, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2c23d448]
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=Create
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	objectType=[

	type=Enumeration
	value=SymmetricKey
]
	uniqueIdentifier=[

	type=TextString
	value=8E5780F5C334CDF3071766B2B540F0A3CBD2C09DF94217EA83354D6ACD816BFD
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648278760271
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:12:40] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:12:40] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648278760271"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "Create"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "ObjectType" : {
        "type" : "Enumeration",
        "value" : "SymmetricKey"
      },
      "UniqueIdentifier" : {
        "type" : "TextString",
        "value" : "8E5780F5C334CDF3071766B2B540F0A3CBD2C09DF94217EA83354D6ACD816BFD"
      }
    }
  }
}
INFO  [2022-03-26 16:12:40] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 862ms
INFO  [2022-03-26 16:12:40] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : CreateSymmKeyController.createSymmetricKey()
INFO  [2022-03-26 16:12:40] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 16:15:24] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:15:24] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:15:24] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "EC"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "256"
        }
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 16:15:24] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3e2040cc, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@30b212eb, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@29602e85, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@8969566, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@348c8298, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1489fba8]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01028
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01028, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@3464ff]
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@507cbe23, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@bf34b3f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@188889d0, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3b3815a2, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@e803940, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1fbb211c]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01029
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01029, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@38cf65e1
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@378a0181, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@717f65ad, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3d7b5edd, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7e58c4fe, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@193944bd, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1361083a]
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@748b213d, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4c4c7466, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1f03cdfe, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4b836fc, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@29976d9f, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@657c38f]
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=EC, 
	keyLength=256, 
	publicExponent=010001, 
	curve=null
]
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:15:24] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 16:15:24] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: HSM server error
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createAsymmetricKey(CreateKeyPairController.java:143)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createKeyPairController(CreateKeyPairController.java:99)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$FastClassBySpringCGLIB$$b0ce60cd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$EnhancerBySpringCGLIB$$3ef46f4c.createKeyPairController(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 16:15:24] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 284ms
INFO  [2022-03-26 16:15:24] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:15:24] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 16:17:37] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:17:37] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:17:37] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "EC"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "256"
        }
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 16:17:37] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@25056484, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@7c4e5835, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@14add433, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@73d58bae, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@7d7ae014, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@737b807e]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01030
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01030, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@535d9b1a]
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3444c1a1, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@377d81df, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1f3b4d01, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@208190b7, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@32da04cf, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@69f21832]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01031
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01031, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@4c2a4b
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@62d2aaf1, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1b981d11, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@176a3379, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@76154dad, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@167f4bc, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5acc1114]
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1cfb00cf, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@40df5ed8, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7e23806b, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@44dd7a0a, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@e4e726, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3a77507c]
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=EC, 
	keyLength=256, 
	publicExponent=010001, 
	curve=null
]
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:17:37] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 16:17:37] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: HSM server error
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createAsymmetricKey(CreateKeyPairController.java:143)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createKeyPairController(CreateKeyPairController.java:99)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$FastClassBySpringCGLIB$$b0ce60cd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$EnhancerBySpringCGLIB$$3ef46f4c.createKeyPairController(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 16:17:37] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 273ms
INFO  [2022-03-26 16:17:37] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:17:37] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 16:18:50] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:18:50] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:18:50] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "RSA"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "2048"
        }
      },
      "ActivationDate" : {
        "type" : "Datetime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 16:18:50] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1f520f5f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1195f2c5, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@15aa642f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@50a8f8fe, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5f0f3d43, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6132efbd]
	keyProfileName=RSA
	description=null
]
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01032
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01032, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@308707b1]
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1644c1c7, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@60fd8bb5, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3c7b7936, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@34c95b87, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4b3fe20, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@81f6d20]
	keyProfileName=RSA
	description=null
]
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01033
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01033, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@11216cc1
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@a78d23b, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@797dc839, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4636d42d, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5c6bef4e, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@104e17f2, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7e529c2]
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@770212af, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7490829e, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1401fa79, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3a046a02, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5d748087, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2d007dc5]
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=RSA, 
	keyLength=2048, 
	publicExponent=010001, 
	curve=null
]
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:18:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@78cddc11, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2bfa3de, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@835fbce, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@35ef7065, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@23d40f9d, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@5c0af96a]
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@7bc692ae, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@35e4a9eb, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@36cfe02d, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3d059e37, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@721938db, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@62a27c82]
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=CreateKeyPair
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	privateKeyUniqueIdentifier=[

	type=TextString
	value=C5EB11FBA4E7DA911E5F3BBD4A0FBC5103E0125D8098BE0467DABDDA3E000685
]
	publicKeyUniqueIdentifier=[

	type=TextString
	value=C5EB11FBA4E7DA911E5F3BBD4A0FBC5103E0125D8098BE0467DABDDA3E000685
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648279134138
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:18:54] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:18:54] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648279134138"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "CreateKeyPair"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "PrivateKeyUniqueIdentifier" : {
        "type" : "TextString",
        "value" : "CEEFFB834BC5E67A300DA5D72E042FB7FB8C14F93A723737471324C49D56DF70"
      },
      "PublicKeyUniqueIdentifier" : {
        "type" : "TextString",
        "value" : "C5EB11FBA4E7DA911E5F3BBD4A0FBC5103E0125D8098BE0467DABDDA3E000685"
      }
    }
  }
}
INFO  [2022-03-26 16:18:54] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 3706ms
INFO  [2022-03-26 16:18:54] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:18:54] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 16:19:31] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:19:31] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:19:31] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "EC"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "256"
        }
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 16:19:31] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@21d9a12, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2d0a6844, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6f2ea11, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@fee29bb, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@614dff5e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1ffbe37b]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01034
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01034, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@6c9bf9e0]
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@7b0851de, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1da351e7, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@88ad96f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3b6d7567, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2524575, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5f900b1]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:31] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01035
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01035, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@bf06096
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@56a8922a, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3a2418cf, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@32583bcd, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@66beea83, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@74150dbc, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6eed8191]
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1d1859d2, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@ce34200, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5047d6cd, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@52a4245d, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@dad2112, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1b4891e5]
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=EC, 
	keyLength=256, 
	publicExponent=010001, 
	curve=null
]
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:19:32] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 16:19:32] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: HSM server error
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createAsymmetricKey(CreateKeyPairController.java:143)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createKeyPairController(CreateKeyPairController.java:99)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$FastClassBySpringCGLIB$$b0ce60cd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$EnhancerBySpringCGLIB$$3ef46f4c.createKeyPairController(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 16:19:32] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 285ms
INFO  [2022-03-26 16:19:32] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:19:32] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 16:20:03] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 16:20:04] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 16:20:04] [] [HikariDataSource.close():350                                ] HikariPool-1 - Shutdown initiated...
INFO  [2022-03-26 16:20:04] [] [HikariDataSource.close():352                                ] HikariPool-1 - Shutdown completed.
INFO  [2022-03-26 16:20:11] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 16:20:11] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 24044 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 16:20:11] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 16:20:12] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 16:20:13] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 16:20:13] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 16:20:13] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 16:20:13] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 16:20:13] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 16:20:13] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 2070 ms
INFO  [2022-03-26 16:20:14] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 16:20:15] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 16:20:15] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 16:20:15] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.668 seconds (JVM running for 6.676)
INFO  [2022-03-26 16:20:15] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 16:20:44] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 16:20:44] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 16:20:44] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 11 ms
INFO  [2022-03-26 16:20:44] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:20:44] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:20:44] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "EC"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "256"
        }
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 16:20:44] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:22:30] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 16:22:38] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 16:23:11] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 16:23:11] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 12220 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 16:23:11] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 16:23:13] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 16:23:13] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 16:23:13] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 16:23:13] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 16:23:13] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 16:23:14] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 16:23:14] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 2032 ms
INFO  [2022-03-26 16:23:15] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 16:23:15] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 16:23:15] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 16:23:15] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.791 seconds (JVM running for 6.854)
INFO  [2022-03-26 16:23:15] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 16:24:42] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 16:24:42] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 16:24:42] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 11 ms
INFO  [2022-03-26 16:24:42] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:24:42] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:24:42] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "EC"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "256"
        }
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 16:24:42] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5cc942ff, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3eace07e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@7d5a5400, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@57cc6bab, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@41040517, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1872b259]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:24:50] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 16:24:50] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01036
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01036, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@375cddf9]
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2ee27205, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@38c4b68e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@52fc1ee0, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@39ea253, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3e518a7f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@23bc2bfd]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01037
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01037, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@4f67d5d6
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@645b4d0b, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@471ef67a, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@209d38e0, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@51259040, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6f28bc7a, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5f353ac3]
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@16a643fd, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6b7c76f9, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@419ddc80, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@37081552, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@139501e5, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@1bd676d0]
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=EC, 
	keyLength=256, 
	publicExponent=010001, 
	curve=null
]
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:24:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 16:24:51] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: HSM server error
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createAsymmetricKey(CreateKeyPairController.java:143)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createKeyPairController(CreateKeyPairController.java:99)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$FastClassBySpringCGLIB$$b0ce60cd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$EnhancerBySpringCGLIB$$d4d2e40.createKeyPairController(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 16:24:51] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 9269ms
INFO  [2022-03-26 16:24:51] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:24:51] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 16:25:19] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:25:19] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:25:19] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "EC"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "256"
        }
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 16:25:19] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:25:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:25:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@346feae5, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3aa81218, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3e978195, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@7b951823, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@30e6fd76, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4a2401a0]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:25:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:25:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:49] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:49] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:25:49] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:49] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:25:49] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:25:49] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:25:49] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:49] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:49] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01038
INFO  [2022-03-26 16:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01038, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:25:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:25:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:52] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:52] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:25:52] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:52] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:25:52] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@3f488a3f]
INFO  [2022-03-26 16:25:52] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:25:52] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:52] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:25:52] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:25:52] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:54] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:54] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:25:54] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6b0c431, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3532e70f, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@794cdf80, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2aebbe4, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@23f76cc, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2017f31b]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:25:54] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:25:54] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01039
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:25:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01039, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:25:56] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:25:56] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@2e5e411a
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@15211177, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6878a5e0, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5426367f, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@76bef2c7, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6b09efce, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@46f300ea]
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@23035385, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@222ab5e8, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6f959fc, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@58d3ed99, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6175027d, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@16877e4e]
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=EC, 
	keyLength=256, 
	publicExponent=010001, 
	curve=null
]
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:26:03] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 16:26:09] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: HSM server error
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createAsymmetricKey(CreateKeyPairController.java:143)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createKeyPairController(CreateKeyPairController.java:99)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$FastClassBySpringCGLIB$$b0ce60cd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$EnhancerBySpringCGLIB$$d4d2e40.createKeyPairController(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 16:26:09] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 50271ms
INFO  [2022-03-26 16:26:09] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:26:09] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
WARN  [2022-03-26 16:26:10] [] [ExceptionHandlerExceptionResolver.doResolveHandlerMethodException():414] Failure in @ExceptionHandler com.tmonet.kms.mgmt.common.exception.ControllerExceptionHandler#handleKMSException(KMSException, HttpServletRequest)
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 현재 연결은 사용자의 호스트 시스템의 소프트웨어의 의해 중단되었습니다
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:272)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:277)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 현재 연결은 사용자의 호스트 시스템의 소프트웨어의 의해 중단되었습니다
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:138)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1253)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:764)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:717)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:707)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:572)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:157)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:220)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1195)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:399)
	at org.apache.coyote.Response.action(Response.java:209)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:305)
	... 53 common frames omitted
ERROR [2022-03-26 16:26:10] [] [DirectJDKLog.log():175                                      ] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.tmonet.kms.mgmt.common.exception.KMSException: HSM server error] with root cause
com.tmonet.kms.mgmt.common.exception.KMSException: HSM server error
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createAsymmetricKey(CreateKeyPairController.java:143)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createKeyPairController(CreateKeyPairController.java:99)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$FastClassBySpringCGLIB$$b0ce60cd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$EnhancerBySpringCGLIB$$d4d2e40.createKeyPairController(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 16:26:44] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:26:44] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:26:44] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "EC"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "256"
        }
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 16:26:44] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1a064250, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@56db769, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@7b6212c5, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5fc750ed, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@777b8d87, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@1f45bafe]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01040
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01040, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@11ff01a7]
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3ac3a1aa, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@8637e46, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2fa1259c, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@46bafbf6, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6153cc7a, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@72d11f58]
	keyProfileName=EC
	description=null
]
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01041
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01041, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:26:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:25] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:25] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:27:26] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:27:26] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:27:26] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:27:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:27:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:27:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:27] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:27] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:27:27] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@450e6d79
INFO  [2022-03-26 16:27:27] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:27:27] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:28] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:28] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:27:28] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3ac149be, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4010aa61, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@462613b9, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7075dba1, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4049e0a8, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5cf1962]
INFO  [2022-03-26 16:27:28] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:27:28] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:29] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:29] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:27:29] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@730279b9, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2d740cab, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@22b7f50d, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5fcefc30, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3f6189c1, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@327dcbd2]
INFO  [2022-03-26 16:27:29] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:27:29] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:30] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:27:30] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:27:30] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=EC, 
	keyLength=256, 
	publicExponent=010001, 
	curve=null
]
INFO  [2022-03-26 16:27:30] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:27:30] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 16:31:44] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: HSM server error
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createAsymmetricKey(CreateKeyPairController.java:143)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createKeyPairController(CreateKeyPairController.java:99)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$FastClassBySpringCGLIB$$b0ce60cd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$EnhancerBySpringCGLIB$$d4d2e40.createKeyPairController(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 16:31:44] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 299268ms
INFO  [2022-03-26 16:31:44] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:31:44] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
WARN  [2022-03-26 16:31:44] [] [ExceptionHandlerExceptionResolver.doResolveHandlerMethodException():414] Failure in @ExceptionHandler com.tmonet.kms.mgmt.common.exception.ControllerExceptionHandler#handleKMSException(KMSException, HttpServletRequest)
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 현재 연결은 사용자의 호스트 시스템의 소프트웨어의 의해 중단되었습니다
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:309)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:272)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1176)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1008)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:342)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:104)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:277)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:219)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:407)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:141)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:80)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1300)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1111)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.io.IOException: 현재 연결은 사용자의 호스트 시스템의 소프트웨어의 의해 중단되었습니다
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:138)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:152)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1253)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:764)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:717)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:707)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:572)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:157)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:220)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1195)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:399)
	at org.apache.coyote.Response.action(Response.java:209)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:305)
	... 56 common frames omitted
ERROR [2022-03-26 16:31:44] [] [DirectJDKLog.log():175                                      ] Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.tmonet.kms.mgmt.common.exception.KMSException: HSM server error] with root cause
com.tmonet.kms.mgmt.common.exception.KMSException: HSM server error
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createAsymmetricKey(CreateKeyPairController.java:143)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController.createKeyPairController(CreateKeyPairController.java:99)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$FastClassBySpringCGLIB$$b0ce60cd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kmsp.createkeypair.controller.CreateKeyPairController$$EnhancerBySpringCGLIB$$d4d2e40.createKeyPairController(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 16:31:52] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 16:31:52] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:31:52] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : null,
  "Operation" : {
    "type" : "Enumeration",
    "value" : "CreateKeyPair"
  },
  "RequestPayload" : {
    "CommonAttributes" : {
      "CryptographicAlgorithm" : {
        "type" : "Enumeration",
        "value" : "RSA"
      },
      "CryptographicDomainParameters" : {
        "Qlength" : {
          "type" : "Integer",
          "value" : "2048"
        }
      },
      "ActivationDate" : {
        "type" : "DateTime",
        "value" : "$NOW-3600"
      }
    },
    "PrivateKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Sign"
      }
    },
    "PublicKeyAttributes" : {
      "CryptographicUsageMask" : {
        "type" : "Integer",
        "value" : "DeriveKey Verify"
      }
    }
  }
}
INFO  [2022-03-26 16:31:52] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4299b25d, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4c5e447e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4861d92d, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@d634e45, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@2e70eee, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@3ca4c778]
	keyProfileName=RSA
	description=null
]
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01042
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01042, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.getServiceId
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:52] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.partition.vo.PartitionInfoVo@6d4cb10a]
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SelectPartitionService.selectPartitionInfo
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : 8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.getServiceId
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null
	listKeyAttribute=[com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@57e65233, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@4d63c0b0, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@61ce9135, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@6902a8e7, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@c10083e, com.tmonet.kms.mgmt.keyprofile.vo.KeyAttribute@5f253f4c]
	keyProfileName=RSA
	description=null
]
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.makeRegisterKeyProfileParams
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CommonService.registerKeyProfile
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01043
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=
	}
	listKeyAttribute=null, 
	keyProfileId=PRF01043, 
	keyProfileName=null, 
	usageStatus=null, 
	regDatetime=null
]
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CommonService.registerKeyProfile
INFO  [2022-03-26 16:31:53] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@4c3aaed3
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3ce8ff8a, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7e507c74, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5dac8515, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@4479f445, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3f9657ef, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@42d83fb5]
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7b658ed6, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@70b59623, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7d118ef5, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@7e373375, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@29f3115b, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@75ab8ec8]
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=RSA, 
	keyLength=2048, 
	publicExponent=010001, 
	curve=null
]
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.makeHsmCreateAsymmetricKeyRequestData
INFO  [2022-03-26 16:31:58] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4c32cb4a, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@77b9fa4d, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1dff8154, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@9e06980, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@53d28b6d, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@6b8168c8]
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@a95a1cd, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@b36576, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@477d1fee, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@275ae8e1, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@66be0e, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1be5e3a1]
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo=null, 
	result={
		resultStatus=00000000, 
		errorCode=00000000, 
		errorMessage=Success
	}
	batchItem=[

	operation=[

	type=Enumeration
	value=CreateKeyPair
]
	resultStatus=[

	type=Enumeration
	value=Success
]
	responsePayload=[

	privateKeyUniqueIdentifier=[

	type=TextString
	value=5577ED2F21379A67EBF211B4D95404E7ABE390D08A3B047BBC68F5E747A76511
]
	publicKeyUniqueIdentifier=[

	type=TextString
	value=5577ED2F21379A67EBF211B4D95404E7ABE390D08A3B047BBC68F5E747A76511
]
]
]
	responseHeader=[

	protocolVersion=[

	protocolVersionMajor=[

	type=Integer
	value=2
]
	protocolVersionMinor=[

	type=Integer
	value=0
]
]
	timeStamp=[

	type=DateTime
	value=1648279921496
]
	batchCount=[

	type=Integer
	value=1
]
]
]
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : KMIPResponseService.getResponseMessage
INFO  [2022-03-26 16:32:01] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 16:32:01] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : null,
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "ResponseHeader" : {
    "ProtocolVersion" : {
      "ProtocolVersionMajor" : {
        "type" : "Integer",
        "value" : "2"
      },
      "ProtocolVersionMinor" : {
        "type" : "Integer",
        "value" : "0"
      }
    },
    "TimeStamp" : {
      "type" : "DateTime",
      "value" : "1648279921496"
    },
    "BatchCount" : {
      "type" : "Integer",
      "value" : "1"
    }
  },
  "BatchItem" : {
    "Operation" : {
      "type" : "Enumeration",
      "value" : "CreateKeyPair"
    },
    "ResultStatus" : {
      "type" : "Enumeration",
      "value" : "Success"
    },
    "ResponsePayload" : {
      "PrivateKeyUniqueIdentifier" : {
        "type" : "TextString",
        "value" : "CE81060A0EFDE28D6FE01791DB28C23040EA94D90FA40FCD00D884CF705DB83C"
      },
      "PublicKeyUniqueIdentifier" : {
        "type" : "TextString",
        "value" : "5577ED2F21379A67EBF211B4D95404E7ABE390D08A3B047BBC68F5E747A76511"
      }
    }
  }
}
INFO  [2022-03-26 16:32:01] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 8625ms
INFO  [2022-03-26 16:32:01] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : CreateKeyPairController.createKeyPairController()
INFO  [2022-03-26 16:32:01] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 16:36:48] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 16:36:49] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 16:36:49] [] [HikariDataSource.close():350                                ] HikariPool-1 - Shutdown initiated...
INFO  [2022-03-26 16:36:50] [] [HikariDataSource.close():352                                ] HikariPool-1 - Shutdown completed.
INFO  [2022-03-26 17:00:48] [] [Version.<clinit>():21                                       ] HV000001: Hibernate Validator 6.1.6.Final
INFO  [2022-03-26 17:00:48] [] [StartupInfoLogger.logStarting():55                          ] Starting ManagementServerApplication on DESKTOP-RNNG395 with PID 22604 (C:\workspace\java\sts\KMS_MGMT_SERVER\bin\main started by kcsic in C:\workspace\java\sts\KMS_MGMT_SERVER)
INFO  [2022-03-26 17:00:48] [] [SpringApplication.logStartupProfileInfo():655               ] The following profiles are active: console-logging,file-logging,local
WARN  [2022-03-26 17:00:50] [] [Logger.warn():44                                            ] No MyBatis mapper was found in '[com.tmonet.kms.mgmt]' package. Please check your configuration.
INFO  [2022-03-26 17:00:50] [] [TomcatWebServer.initialize():108                            ] Tomcat initialized with port(s): 7000 (http)
INFO  [2022-03-26 17:00:50] [] [DirectJDKLog.log():173                                      ] Initializing ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 17:00:50] [] [DirectJDKLog.log():173                                      ] Starting service [Tomcat]
INFO  [2022-03-26 17:00:50] [] [DirectJDKLog.log():173                                      ] Starting Servlet engine: [Apache Tomcat/9.0.39]
INFO  [2022-03-26 17:00:50] [] [DirectJDKLog.log():173                                      ] Initializing Spring embedded WebApplicationContext
INFO  [2022-03-26 17:00:50] [] [ServletWebServerApplicationContext.prepareWebApplicationContext():285] Root WebApplicationContext: initialization completed in 1832 ms
INFO  [2022-03-26 17:00:51] [] [ExecutorConfigurationSupport.initialize():181               ] Initializing ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 17:00:52] [] [DirectJDKLog.log():173                                      ] Starting ProtocolHandler ["http-nio-7000"]
INFO  [2022-03-26 17:00:52] [] [TomcatWebServer.start():220                                 ] Tomcat started on port(s): 7000 (http) with context path ''
INFO  [2022-03-26 17:00:52] [] [StartupInfoLogger.logStarted():61                           ] Started ManagementServerApplication in 4.045 seconds (JVM running for 5.898)
INFO  [2022-03-26 17:00:52] [] [ManagementServerApplication.main():24                       ] ##### START MANAGEMENT SERVER #####
INFO  [2022-03-26 17:00:55] [] [DirectJDKLog.log():173                                      ] Initializing Spring DispatcherServlet 'dispatcherServlet'
INFO  [2022-03-26 17:00:55] [] [FrameworkServlet.initServletBean():525                      ] Initializing Servlet 'dispatcherServlet'
INFO  [2022-03-26 17:00:55] [] [FrameworkServlet.initServletBean():547                      ] Completed initialization in 12 ms
INFO  [2022-03-26 17:00:55] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:00:55] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:00:55] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "SRV00001",
  "keyProfileId" : "PRF00002",
  "keyLabel" : "1234",
  "keyFormatType" : "TransparentRSAPrivateKey",
  "asymmetricKeyData" : {
    "publicExponent" : "010001",
    "primeP" : "d32737e7267ffe1341b2d5c0d150a81b586fb3132bed2f8d5262864a9cb9f30af38be448598d413a172efb802c21acf1c11c520c2f26a471dcad212eac7ca39d",
    "primeQ" : "cc8853d1d54da630fac004f471f281c7b8982d8224a490edbeb33d3e3d5cc93c4765703d1dd791642f1f116a0dd852be2419b2af72bfe9a030e860b0288b5d77",
    "primeExponentP" : "0e12bf1718e9cef5599ba1c3882fe8046a90874eefce8f2ccc20e4f2741fb0a33a3848aec9c9305fbecbd2d76819967d4671acc6431e4037968db37878e695c1",
    "primeExponentQ" : "95297b0f95a2fa67d00707d609dfd4fc05c89dafc2ef6d6ea55bec771ea333734d9251e79082ecda866efef13c459e1a631386b7e354c899f5f112ca85d71583",
    "crtCoefficient" : "4f456c502493bdc0ed2ab756a3a6ed4d67352a697d4216e93212b127a63d5411ce6fa98d5dbefd73263e3728142743818166ed7dd63687dd2a8ca1d2f4fbd8e1"
  }
}
INFO  [2022-03-26 17:00:55] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:00:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:00:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:00:55] [] [HikariDataSource.getConnection():110                        ] HikariPool-1 - Starting...
INFO  [2022-03-26 17:00:56] [] [HikariDataSource.getConnection():123                        ] HikariPool-1 - Start completed.
INFO  [2022-03-26 17:00:56] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:00:56] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:00:56] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:00:56] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:00:56] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.getHsmServiceInfo
ERROR [2022-03-26 17:00:56] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Database connection failure
INFO  [2022-03-26 17:00:56] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : ImportAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:00:56] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:00:56] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Database connection failure
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService.getHsmServiceInfo(ImportAsymmetricKeyService.java:60)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$FastClassBySpringCGLIB$$a567e6af.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$EnhancerBySpringCGLIB$$ff9c0b98.getHsmServiceInfo(<generated>)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController.importAsymmetricKey(ImportAsymmetricKeyController.java:49)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$FastClassBySpringCGLIB$$474dc373.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$EnhancerBySpringCGLIB$$e9fabcf4.importAsymmetricKey(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:00:56] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 185ms
INFO  [2022-03-26 17:00:56] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:00:56] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:01:45] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:01:45] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:01:45] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "SRV00001",
  "keyProfileId" : "PRF00002",
  "keyLabel" : "1234",
  "keyFormatType" : "TransparentRSAPrivateKey",
  "asymmetricKeyData" : {
    "publicExponent" : "010001",
    "primeP" : "d32737e7267ffe1341b2d5c0d150a81b586fb3132bed2f8d5262864a9cb9f30af38be448598d413a172efb802c21acf1c11c520c2f26a471dcad212eac7ca39d",
    "primeQ" : "cc8853d1d54da630fac004f471f281c7b8982d8224a490edbeb33d3e3d5cc93c4765703d1dd791642f1f116a0dd852be2419b2af72bfe9a030e860b0288b5d77",
    "primeExponentP" : "0e12bf1718e9cef5599ba1c3882fe8046a90874eefce8f2ccc20e4f2741fb0a33a3848aec9c9305fbecbd2d76819967d4671acc6431e4037968db37878e695c1",
    "primeExponentQ" : "95297b0f95a2fa67d00707d609dfd4fc05c89dafc2ef6d6ea55bec771ea333734d9251e79082ecda866efef13c459e1a631386b7e354c899f5f112ca85d71583",
    "crtCoefficient" : "4f456c502493bdc0ed2ab756a3a6ed4d67352a697d4216e93212b127a63d5411ce6fa98d5dbefd73263e3728142743818166ed7dd63687dd2a8ca1d2f4fbd8e1"
  }
}
INFO  [2022-03-26 17:01:45] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:01:45] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:01:45] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:01:45] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:01:45] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:01:45] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:01:45] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:01:45] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.getHsmServiceInfo
ERROR [2022-03-26 17:01:45] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Database connection failure
INFO  [2022-03-26 17:01:45] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : ImportAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:01:45] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:01:45] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Database connection failure
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService.getHsmServiceInfo(ImportAsymmetricKeyService.java:60)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$FastClassBySpringCGLIB$$a567e6af.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$EnhancerBySpringCGLIB$$ff9c0b98.getHsmServiceInfo(<generated>)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController.importAsymmetricKey(ImportAsymmetricKeyController.java:49)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$FastClassBySpringCGLIB$$474dc373.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$EnhancerBySpringCGLIB$$e9fabcf4.importAsymmetricKey(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:01:45] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 20ms
INFO  [2022-03-26 17:01:45] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:01:45] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:03:45] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:03:45] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:03:45] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "SRV00001",
  "keyProfileId" : "PRF00003",
  "keyLabel" : "1234",
  "keyFormatType" : "TransparentRSAPublicKey",
  "asymmetricKeyData" : {
    "modulus" : "a8b3b284af8eb50b387034a860f146c4919f318763cd6c5598c8ae4811a1e0abc4c7e0b082d693a5e7fced675cf4668512772c0cbc64a742c6c630f533c8cc72f62ae833c40bf25842e984bb78bdbf97c0107d55bdb662f5c4e0fab9845cb5148ef7392dd3aaff93ae1e6b667bb3d4247616d4f5ba10d4cfd226de88d39f16fb",
    "publicExponent" : "010001"
  }
}
INFO  [2022-03-26 17:03:45] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:03:45] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:03:45] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:03:45] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:03:45] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:03:45] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:03:45] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:03:45] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.getHsmServiceInfo
ERROR [2022-03-26 17:03:45] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Database connection failure
INFO  [2022-03-26 17:03:45] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : ImportAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:03:45] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:03:45] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Database connection failure
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService.getHsmServiceInfo(ImportAsymmetricKeyService.java:60)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$FastClassBySpringCGLIB$$a567e6af.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$EnhancerBySpringCGLIB$$ff9c0b98.getHsmServiceInfo(<generated>)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController.importAsymmetricKey(ImportAsymmetricKeyController.java:49)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$FastClassBySpringCGLIB$$474dc373.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$EnhancerBySpringCGLIB$$e9fabcf4.importAsymmetricKey(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:03:45] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 20ms
INFO  [2022-03-26 17:03:45] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:03:45] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:04:22] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:04:22] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: RegisterKeyProfileController.registerKeyProfile()
INFO  [2022-03-26 17:04:22] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.KEY.PF.REG.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "listKeyAttribute" : [ {
    "keyAttributeId" : "cryptographicAlgorithm",
    "keyAttributeValue" : "RSA"
  }, {
    "keyAttributeId" : "keyLength",
    "keyAttributeValue" : "2048"
  }, {
    "keyAttributeId" : "keyObjectType",
    "keyAttributeValue" : "TP.KEY.01"
  }, {
    "keyAttributeId" : "keyUsageMask",
    "keyAttributeValue" : "0000001F"
  }, {
    "keyAttributeId" : "publicExponent",
    "keyAttributeValue" : "010001"
  }, {
    "keyAttributeId" : "canExportKey",
    "keyAttributeValue" : "1"
  } ],
  "keyProfileName" : "",
  "description" : null
}
INFO  [2022-03-26 17:04:22] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:04:22] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:04:22] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 17:04:22] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:04:22] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 17:04:22] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:04:22] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:04:22] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 17:04:22] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01045
INFO  [2022-03-26 17:04:22] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 17:04:22] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:04:22] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : {
    "apiId" : "KMS.KEY.PF.REG.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : ""
  },
  "keyProfileId" : "PRF01045"
}
INFO  [2022-03-26 17:04:22] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 123ms
INFO  [2022-03-26 17:04:22] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : RegisterKeyProfileController.registerKeyProfile()
INFO  [2022-03-26 17:04:22] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 17:06:55] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:06:55] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:06:55] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "SRV00001",
  "keyProfileId" : "PRF01045",
  "keyLabel" : "1234",
  "keyFormatType" : "TransparentRSAPrivateKey",
  "asymmetricKeyData" : {
    "publicExponent" : "010001",
    "primeP" : "d32737e7267ffe1341b2d5c0d150a81b586fb3132bed2f8d5262864a9cb9f30af38be448598d413a172efb802c21acf1c11c520c2f26a471dcad212eac7ca39d",
    "primeQ" : "cc8853d1d54da630fac004f471f281c7b8982d8224a490edbeb33d3e3d5cc93c4765703d1dd791642f1f116a0dd852be2419b2af72bfe9a030e860b0288b5d77",
    "primeExponentP" : "0e12bf1718e9cef5599ba1c3882fe8046a90874eefce8f2ccc20e4f2741fb0a33a3848aec9c9305fbecbd2d76819967d4671acc6431e4037968db37878e695c1",
    "primeExponentQ" : "95297b0f95a2fa67d00707d609dfd4fc05c89dafc2ef6d6ea55bec771ea333734d9251e79082ecda866efef13c459e1a631386b7e354c899f5f112ca85d71583",
    "crtCoefficient" : "4f456c502493bdc0ed2ab756a3a6ed4d67352a697d4216e93212b127a63d5411ce6fa98d5dbefd73263e3728142743818166ed7dd63687dd2a8ca1d2f4fbd8e1"
  }
}
INFO  [2022-03-26 17:06:55] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:06:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:06:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:06:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:06:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:06:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:06:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:06:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.getHsmServiceInfo
ERROR [2022-03-26 17:06:55] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Database connection failure
INFO  [2022-03-26 17:06:55] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : ImportAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:06:55] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:06:55] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Database connection failure
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService.getHsmServiceInfo(ImportAsymmetricKeyService.java:60)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$FastClassBySpringCGLIB$$a567e6af.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$EnhancerBySpringCGLIB$$ff9c0b98.getHsmServiceInfo(<generated>)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController.importAsymmetricKey(ImportAsymmetricKeyController.java:49)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$FastClassBySpringCGLIB$$474dc373.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$EnhancerBySpringCGLIB$$e9fabcf4.importAsymmetricKey(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:06:55] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 20ms
INFO  [2022-03-26 17:06:55] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:06:55] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:08:45] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:08:45] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportSymmetricKeyController.importSymmetricKey()
INFO  [2022-03-26 17:08:45] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.SK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyProfileId" : "PRF00003",
  "symmetricKeyData" : "7352CB3D949BD6F285E0AB10D020EA6E7352CB3D949BD6F2",
  "keyLabel" : "1234",
  "keyEncryptionKeyId" : null,
  "cryptographicParameter" : null
}
INFO  [2022-03-26 17:08:45] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@498b1c53
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@52911bf2, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@19aa618d, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@8d29f6f, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6e825c3d, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@34169494]
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.makeHsmImportSymmetricKeyRequestData
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.02, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=AES, 
	symmetricKeyData=7352CB3D949BD6F285E0AB10D020EA6E7352CB3D949BD6F2, 
	keyEncryptionKeyId=null, 
	cryptographicParameter=null
]
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.makeHsmImportSymmetricKeyRequestData
INFO  [2022-03-26 17:08:45] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@41a47b5c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3f1ad3c6, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3f88e8d1, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@26cd069f, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4451f781]
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 17:08:48] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:08:48] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : {
    "apiId" : "KMS.SK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "keyId" : "000CFB7B440FC578BBF0F3B5D4A71320671835A5FA8E79312667FECBEA50D289"
}
INFO  [2022-03-26 17:08:48] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 3311ms
INFO  [2022-03-26 17:08:48] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : ImportSymmetricKeyController.importSymmetricKey()
INFO  [2022-03-26 17:08:48] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 17:09:13] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:09:13] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:09:13] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyProfileId" : "PRF01045",
  "keyLabel" : "1234",
  "keyFormatType" : "TransparentRSAPrivateKey",
  "asymmetricKeyData" : {
    "publicExponent" : "010001",
    "primeP" : "d32737e7267ffe1341b2d5c0d150a81b586fb3132bed2f8d5262864a9cb9f30af38be448598d413a172efb802c21acf1c11c520c2f26a471dcad212eac7ca39d",
    "primeQ" : "cc8853d1d54da630fac004f471f281c7b8982d8224a490edbeb33d3e3d5cc93c4765703d1dd791642f1f116a0dd852be2419b2af72bfe9a030e860b0288b5d77",
    "primeExponentP" : "0e12bf1718e9cef5599ba1c3882fe8046a90874eefce8f2ccc20e4f2741fb0a33a3848aec9c9305fbecbd2d76819967d4671acc6431e4037968db37878e695c1",
    "primeExponentQ" : "95297b0f95a2fa67d00707d609dfd4fc05c89dafc2ef6d6ea55bec771ea333734d9251e79082ecda866efef13c459e1a631386b7e354c899f5f112ca85d71583",
    "crtCoefficient" : "4f456c502493bdc0ed2ab756a3a6ed4d67352a697d4216e93212b127a63d5411ce6fa98d5dbefd73263e3728142743818166ed7dd63687dd2a8ca1d2f4fbd8e1"
  }
}
INFO  [2022-03-26 17:09:13] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@50786798
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@6099296d, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@683bfdbe, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@36434bc7, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2514ae30, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@cef39be, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@3b0ee390]
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.makeHsmImportAsymmetricKeyRequestData
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.02, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=RSA, 
	keyLength=0, 
	keyFormatType=TransparentRSAPrivateKey, 
	asymmetricKeyData={publicExponent=010001, primeP=d32737e7267ffe1341b2d5c0d150a81b586fb3132bed2f8d5262864a9cb9f30af38be448598d413a172efb802c21acf1c11c520c2f26a471dcad212eac7ca39d, primeQ=cc8853d1d54da630fac004f471f281c7b8982d8224a490edbeb33d3e3d5cc93c4765703d1dd791642f1f116a0dd852be2419b2af72bfe9a030e860b0288b5d77, primeExponentP=0e12bf1718e9cef5599ba1c3882fe8046a90874eefce8f2ccc20e4f2741fb0a33a3848aec9c9305fbecbd2d76819967d4671acc6431e4037968db37878e695c1, primeExponentQ=95297b0f95a2fa67d00707d609dfd4fc05c89dafc2ef6d6ea55bec771ea333734d9251e79082ecda866efef13c459e1a631386b7e354c899f5f112ca85d71583, crtCoefficient=4f456c502493bdc0ed2ab756a3a6ed4d67352a697d4216e93212b127a63d5411ce6fa98d5dbefd73263e3728142743818166ed7dd63687dd2a8ca1d2f4fbd8e1}
]
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.makeHsmImportAsymmetricKeyRequestData
INFO  [2022-03-26 17:09:13] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4d3619a, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@f04878a, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3b5f3e3f, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@528ee40e, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@4dce8074, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@665d7690]
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 17:09:14] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:09:15] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "keyId" : "7F4C967EFA636D383FBBF453C8B7B183FFB36B798A50FA04315B9EB6D897BA6D"
}
INFO  [2022-03-26 17:09:15] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 1230ms
INFO  [2022-03-26 17:09:15] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:09:15] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 17:10:12] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:10:12] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:10:12] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyProfileId" : "PRF02066",
  "keyLabel" : "1234",
  "keyFormatType" : "TransparentRSAPublicKey",
  "asymmetricKeyData" : {
    "modulus" : "a8b3b284af8eb50b387034a860f146c4919f318763cd6c5598c8ae4811a1e0abc4c7e0b082d693a5e7fced675cf4668512772c0cbc64a742c6c630f533c8cc72f62ae833c40bf25842e984bb78bdbf97c0107d55bdb662f5c4e0fab9845cb5148ef7392dd3aaff93ae1e6b667bb3d4247616d4f5ba10d4cfd226de88d39f16fb",
    "publicExponent" : "010001"
  }
}
INFO  [2022-03-26 17:10:12] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:10:12] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:10:12] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
ERROR [2022-03-26 17:10:12] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Database connection failure
INFO  [2022-03-26 17:10:12] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:10:12] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:10:12] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Database connection failure
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService.checkKeyProfileStatus(ImportAsymmetricKeyService.java:45)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$FastClassBySpringCGLIB$$a567e6af.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$EnhancerBySpringCGLIB$$ff9c0b98.checkKeyProfileStatus(<generated>)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController.importAsymmetricKey(ImportAsymmetricKeyController.java:46)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$FastClassBySpringCGLIB$$474dc373.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$EnhancerBySpringCGLIB$$e9fabcf4.importAsymmetricKey(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:10:12] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 11ms
INFO  [2022-03-26 17:10:12] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:10:12] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:10:59] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:10:59] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:10:59] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyProfileId" : "PRF02067",
  "keyLabel" : "1234",
  "keyFormatType" : "TransparentRSAPublicKey",
  "asymmetricKeyData" : {
    "modulus" : "a8b3b284af8eb50b387034a860f146c4919f318763cd6c5598c8ae4811a1e0abc4c7e0b082d693a5e7fced675cf4668512772c0cbc64a742c6c630f533c8cc72f62ae833c40bf25842e984bb78bdbf97c0107d55bdb662f5c4e0fab9845cb5148ef7392dd3aaff93ae1e6b667bb3d4247616d4f5ba10d4cfd226de88d39f16fb",
    "publicExponent" : "010001"
  }
}
INFO  [2022-03-26 17:10:59] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:10:59] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:10:59] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
ERROR [2022-03-26 17:10:59] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Database connection failure
INFO  [2022-03-26 17:10:59] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:10:59] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:10:59] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Database connection failure
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService.checkKeyProfileStatus(ImportAsymmetricKeyService.java:45)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$FastClassBySpringCGLIB$$a567e6af.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$EnhancerBySpringCGLIB$$ff9c0b98.checkKeyProfileStatus(<generated>)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController.importAsymmetricKey(ImportAsymmetricKeyController.java:46)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$FastClassBySpringCGLIB$$474dc373.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$EnhancerBySpringCGLIB$$e9fabcf4.importAsymmetricKey(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:10:59] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 11ms
INFO  [2022-03-26 17:10:59] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:10:59] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:11:18] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:11:18] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:11:18] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyProfileId" : "PRF02067",
  "keyLabel" : "1234",
  "keyFormatType" : "TransparentRSAPublicKey",
  "asymmetricKeyData" : {
    "modulus" : "a8b3b284af8eb50b387034a860f146c4919f318763cd6c5598c8ae4811a1e0abc4c7e0b082d693a5e7fced675cf4668512772c0cbc64a742c6c630f533c8cc72f62ae833c40bf25842e984bb78bdbf97c0107d55bdb662f5c4e0fab9845cb5148ef7392dd3aaff93ae1e6b667bb3d4247616d4f5ba10d4cfd226de88d39f16fb",
    "publicExponent" : "010001"
  }
}
INFO  [2022-03-26 17:11:18] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:11:18] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:11:18] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
ERROR [2022-03-26 17:11:18] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Database connection failure
INFO  [2022-03-26 17:11:18] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:11:18] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:11:18] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Database connection failure
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService.checkKeyProfileStatus(ImportAsymmetricKeyService.java:45)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$FastClassBySpringCGLIB$$a567e6af.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$EnhancerBySpringCGLIB$$ff9c0b98.checkKeyProfileStatus(<generated>)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController.importAsymmetricKey(ImportAsymmetricKeyController.java:46)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$FastClassBySpringCGLIB$$474dc373.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$EnhancerBySpringCGLIB$$e9fabcf4.importAsymmetricKey(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:11:18] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 12ms
INFO  [2022-03-26 17:11:18] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:11:18] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:11:47] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:11:47] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:11:47] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyProfileId" : "PRF02067",
  "keyLabel" : "12345",
  "keyFormatType" : "TransparentRSAPublicKey",
  "asymmetricKeyData" : {
    "modulus" : "a8b3b284af8eb50b387034a860f146c4919f318763cd6c5598c8ae4811a1e0abc4c7e0b082d693a5e7fced675cf4668512772c0cbc64a742c6c630f533c8cc72f62ae833c40bf25842e984bb78bdbf97c0107d55bdb662f5c4e0fab9845cb5148ef7392dd3aaff93ae1e6b667bb3d4247616d4f5ba10d4cfd226de88d39f16fb",
    "publicExponent" : "010001"
  }
}
INFO  [2022-03-26 17:11:47] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:11:47] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:11:47] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
ERROR [2022-03-26 17:11:47] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Database connection failure
INFO  [2022-03-26 17:11:47] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:11:47] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:11:47] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Database connection failure
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService.checkKeyProfileStatus(ImportAsymmetricKeyService.java:45)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$FastClassBySpringCGLIB$$a567e6af.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$EnhancerBySpringCGLIB$$ff9c0b98.checkKeyProfileStatus(<generated>)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController.importAsymmetricKey(ImportAsymmetricKeyController.java:46)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$FastClassBySpringCGLIB$$474dc373.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$EnhancerBySpringCGLIB$$e9fabcf4.importAsymmetricKey(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:11:47] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 12ms
INFO  [2022-03-26 17:11:47] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:11:47] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:12:28] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:12:28] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: RegisterKeyProfileController.registerKeyProfile()
INFO  [2022-03-26 17:12:28] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.KEY.PF.REG.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "listKeyAttribute" : [ {
    "keyAttributeId" : "cryptographicAlgorithm",
    "keyAttributeValue" : "ECDSA"
  }, {
    "keyAttributeId" : "curve",
    "keyAttributeValue" : "BRAINPOOLP256R1"
  }, {
    "keyAttributeId" : "keyLength",
    "keyAttributeValue" : "2048"
  }, {
    "keyAttributeId" : "keyObjectType",
    "keyAttributeValue" : "TP.KEY.01"
  }, {
    "keyAttributeId" : "keyUsageMask",
    "keyAttributeValue" : "0000001F"
  }, {
    "keyAttributeId" : "canExportKey",
    "keyAttributeValue" : "1"
  } ],
  "keyProfileName" : "ECDSA private",
  "description" : null
}
INFO  [2022-03-26 17:12:28] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:12:28] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:12:28] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 17:12:28] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:12:28] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 17:12:28] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:12:28] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:12:28] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 17:12:28] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01046
INFO  [2022-03-26 17:12:28] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 17:12:28] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:12:28] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : {
    "apiId" : "KMS.KEY.PF.REG.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : ""
  },
  "keyProfileId" : "PRF01046"
}
INFO  [2022-03-26 17:12:28] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 98ms
INFO  [2022-03-26 17:12:28] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : RegisterKeyProfileController.registerKeyProfile()
INFO  [2022-03-26 17:12:28] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 17:13:07] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:13:07] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:13:07] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyProfileId" : "PRF01046",
  "keyLabel" : "1234",
  "keyFormatType" : "TransparentECDSAPrivateKey",
  "asymmetricKeyData" : {
    "curve" : "SECP256K1",
    "d" : "BD4D210873953BC7EDE87E8A2F0AE013C4BEC21E874248118A22C20B634AEF80"
  }
}
INFO  [2022-03-26 17:13:07] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@74b3f8af
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@632e9a74, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@54327757, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@281aae2a, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@49b6407, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@13f1b3da, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@543ef63c]
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.makeHsmImportAsymmetricKeyRequestData
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.ASK.REG.02, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=ECDSA, 
	keyLength=0, 
	keyFormatType=TransparentECDSAPrivateKey, 
	asymmetricKeyData={curve=SECP256K1, d=BD4D210873953BC7EDE87E8A2F0AE013C4BEC21E874248118A22C20B634AEF80}
]
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.makeHsmImportAsymmetricKeyRequestData
INFO  [2022-03-26 17:13:07] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2588387c, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@1fbd4764, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@14ac3388, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@474b5953, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2364d21e, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@56972771]
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.setKeyAttr
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : ImportAsymmetricKeyService.storeAsymmetricKeyInfo
INFO  [2022-03-26 17:13:08] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:08] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "keyId" : "ABD830CD7D04754944A5D486D717D13CE85FDD92A17E92EA950A742FC703C073"
}
INFO  [2022-03-26 17:13:08] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 1210ms
INFO  [2022-03-26 17:13:08] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:13:08] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 17:13:57] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:13:57] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:13:57] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.ASK.REG.02",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyProfileId" : "PRF02068",
  "keyLabel" : "1234",
  "keyFormatType" : "TransparentECDSAPublicKey",
  "asymmetricKeyData" : {
    "curve" : "SECP256K1",
    "affineCoordinateX" : "4989EA8322B387DBF96AB247C62C4622D7F748FB21EB57A5E861E513DAA979F5",
    "affineCoordinateY" : "F6F63375776BCA4DA1492CF4D830C33778646E3D259CD17F6008B05B6768FCA2"
  }
}
INFO  [2022-03-26 17:13:57] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:13:57] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:13:57] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: ImportAsymmetricKeyService.checkKeyProfileStatus
ERROR [2022-03-26 17:13:57] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Database connection failure
INFO  [2022-03-26 17:13:57] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : ImportAsymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:13:57] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:13:57] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Database connection failure
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService.checkKeyProfileStatus(ImportAsymmetricKeyService.java:45)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$FastClassBySpringCGLIB$$a567e6af.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.service.ImportAsymmetricKeyService$$EnhancerBySpringCGLIB$$ff9c0b98.checkKeyProfileStatus(<generated>)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController.importAsymmetricKey(ImportAsymmetricKeyController.java:46)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$FastClassBySpringCGLIB$$474dc373.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.controller.ImportAsymmetricKeyController$$EnhancerBySpringCGLIB$$e9fabcf4.importAsymmetricKey(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:13:57] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 10ms
INFO  [2022-03-26 17:13:57] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : ImportAsymmetricKeyController.importAsymmetricKey()
INFO  [2022-03-26 17:13:57] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:16:42] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:16:42] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: DeleteKeyController.deleteKey()
INFO  [2022-03-26 17:16:42] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.KEY.DEL.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyId" : "7F4C967EFA636D383FBBF453C8B7B183FFB36B798A50FA04315B9EB6D897BA6D",
  "keyLabel" : null
}
INFO  [2022-03-26 17:16:42] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:16:42] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:16:42] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: DeleteKeyService.selectKeyList
INFO  [2022-03-26 17:16:42] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.KeyListVo@6ac615cd
INFO  [2022-03-26 17:16:42] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : DeleteKeyService.selectKeyList
INFO  [2022-03-26 17:16:42] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:16:42] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:16:42] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: DeleteKeyService.checkKeyStatus
ERROR [2022-03-26 17:16:42] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Unavailable status
INFO  [2022-03-26 17:16:42] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : DeleteKeyService.checkKeyStatus
INFO  [2022-03-26 17:16:42] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:16:42] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Unavailable status
	at com.tmonet.kms.mgmt.key.service.DeleteKeyService.checkKeyStatus(DeleteKeyService.java:65)
	at com.tmonet.kms.mgmt.key.service.DeleteKeyService$$FastClassBySpringCGLIB$$1e2ab05f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.service.DeleteKeyService$$EnhancerBySpringCGLIB$$8c57f6a8.checkKeyStatus(<generated>)
	at com.tmonet.kms.mgmt.key.controller.DeleteKeyController.deleteKey(DeleteKeyController.java:48)
	at com.tmonet.kms.mgmt.key.controller.DeleteKeyController$$FastClassBySpringCGLIB$$18a78d03.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.key.controller.DeleteKeyController$$EnhancerBySpringCGLIB$$a36a93a4.deleteKey(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:16:42] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 17ms
INFO  [2022-03-26 17:16:42] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : DeleteKeyController.deleteKey()
INFO  [2022-03-26 17:16:42] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:20:14] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:20:14] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SignController.sign()
INFO  [2022-03-26 17:20:14] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.OP.SIGN.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "6DC73E077101BE1578B89287BD3453A7AC600DFCE0DFA6626FED3BA275CF6613",
  "keyId" : "2D45A11810D5869B371F274B8A995F556D786A331915208A4E409DB3770805A8",
  "plaintext" : "MEQCIHEFuOKD+OSCZ48vUAjJkppusyVmRbQmW+sB1JJdsCHgAiA94/CyMtIk/sMX7oZvZgNqTuY0am8fHicSxbIu1uznJA==",
  "cryptographicParameter" : {
    "cryptographicAlgorithm" : "RSA",
    "blockCipherMode" : null,
    "paddingRule" : "None",
    "iv" : null,
    "hashingAlgorithm" : null,
    "tag" : null
  }
}
INFO  [2022-03-26 17:20:14] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:20:14] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:20:14] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SignService.selectKeyList
ERROR [2022-03-26 17:20:14] [] [BaseLogging.serviceBaseLogging():88                         ] ! Exception Error : Database select failure
INFO  [2022-03-26 17:20:14] [] [BaseLogging.serviceBaseLogging():89                         ] - End Service  : SignService.selectKeyList
INFO  [2022-03-26 17:20:14] [] [BaseLogging.serviceBaseLogging():90                         ] --------------------------------------------------------------------------------
ERROR [2022-03-26 17:20:14] [] [BaseLogging.controllerBaseLogging():57                      ] ! Exception Error : 
com.tmonet.kms.mgmt.common.exception.KMSException: Database select failure
	at com.tmonet.kms.mgmt.operation.service.SignService.selectKeyList(SignService.java:39)
	at com.tmonet.kms.mgmt.operation.service.SignService$$FastClassBySpringCGLIB$$d5f47602.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.serviceBaseLogging(BaseLogging.java:79)
	at sun.reflect.GeneratedMethodAccessor77.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.operation.service.SignService$$EnhancerBySpringCGLIB$$85806571.selectKeyList(<generated>)
	at com.tmonet.kms.mgmt.operation.controller.SignController.sign(SignController.java:44)
	at com.tmonet.kms.mgmt.operation.controller.SignController$$FastClassBySpringCGLIB$$281ed94e.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.tmonet.common.aop.BaseLogging.controllerBaseLogging(BaseLogging.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:95)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.tmonet.kms.mgmt.operation.controller.SignController$$EnhancerBySpringCGLIB$$9f50ff65.sign(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:542)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:143)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:374)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1590)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
INFO  [2022-03-26 17:20:14] [] [BaseLogging.controllerBaseLogging():58                      ] # RESPONSE TIME   : 20ms
INFO  [2022-03-26 17:20:14] [] [BaseLogging.controllerBaseLogging():59                      ] # END CONTROLLER  : SignController.sign()
INFO  [2022-03-26 17:20:14] [] [BaseLogging.controllerBaseLogging():60                      ] ################################################################################
INFO  [2022-03-26 17:21:50] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:21:50] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: SignController.sign()
INFO  [2022-03-26 17:21:50] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.OP.SIGN.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyId" : "7F4C967EFA636D383FBBF453C8B7B183FFB36B798A50FA04315B9EB6D897BA6D",
  "plaintext" : "MEQCIHEFuOKD+OSCZ48vUAjJkppusyVmRbQmW+sB1JJdsCHgAiA94/CyMtIk/sMX7oZvZgNqTuY0am8fHicSxbIu1uznJA==",
  "cryptographicParameter" : {
    "cryptographicAlgorithm" : "RSA",
    "blockCipherMode" : null,
    "paddingRule" : "None",
    "iv" : null,
    "hashingAlgorithm" : null,
    "tag" : null
  }
}
INFO  [2022-03-26 17:21:50] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SignService.selectKeyList
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.KeyListVo@1747494
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SignService.selectKeyList
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SignService.selectKeyAttrList
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@a849396, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@46db7434, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@18ee3799, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3a9c20c4, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@14aa1c22, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@9cdb057, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@60761c08]
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SignService.selectKeyAttrList
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SignService.getHsmServiceInfo
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@3b379ac2
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SignService.getHsmServiceInfo
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SignService.checkKeyStatus
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SignService.checkKeyStatus
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SignService.makeHsmSignRequestData
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.OP.SIGN.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	keyId=7F4C967EFA636D383FBBF453C8B7B183FFB36B798A50FA04315B9EB6D897BA6D, 
	plaintext=MEQCIHEFuOKD+OSCZ48vUAjJkppusyVmRbQmW+sB1JJdsCHgAiA94/CyMtIk/sMX7oZvZgNqTuY0am8fHicSxbIu1uznJA==, 
	cryptographicParameter=CryptographicParameter [cryptographicAlgorithm=RSA, blockCipherMode=null, paddingRule=None, iv=null, hashingAlgorithm=null, tag=null]
]
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SignService.makeHsmSignRequestData
INFO  [2022-03-26 17:21:50] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:51] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:51] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: SignService.storeKeyInfo
INFO  [2022-03-26 17:21:51] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:21:51] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : SignService.storeKeyInfo
INFO  [2022-03-26 17:21:51] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:21:51] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : {
    "apiId" : "KMS.OP.SIGN.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "signature" : "kUX9GcTItkrTEGWbK6//lAeFYP8jOdiIMXOKWGIR5iuZ3SNaG/4bPXBDKWdc9bWPZG0T9DkST7OcyYKCPQUe3VXqZ88BgcUllpveBsfVGpzKtdkRaNwp3pQqPgphcdvsz5d5wP4IXoml8Iy4uIaRfwb+4H1W2j7xbh2mOHAAJWk="
}
INFO  [2022-03-26 17:21:51] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 723ms
INFO  [2022-03-26 17:21:51] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : SignController.sign()
INFO  [2022-03-26 17:21:51] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 17:49:00] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:49:00] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: RegisterKeyProfileController.registerKeyProfile()
INFO  [2022-03-26 17:49:00] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.KEY.PF.REG.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "listKeyAttribute" : [ {
    "keyAttributeId" : "cryptographicAlgorithm",
    "keyAttributeValue" : "des3"
  }, {
    "keyAttributeId" : "keyObjectType",
    "keyAttributeValue" : "TP.KEY.03"
  }, {
    "keyAttributeId" : "keyUsageMask",
    "keyAttributeValue" : "0000001F"
  } ],
  "keyProfileName" : "DES3",
  "description" : null
}
INFO  [2022-03-26 17:49:00] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:49:00] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:00] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.checkParams
INFO  [2022-03-26 17:49:00] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:49:00] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.checkParams
INFO  [2022-03-26 17:49:00] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:00] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:00] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 17:49:00] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : PRF01047
INFO  [2022-03-26 17:49:00] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : RegisterKeyProfileService.registerKeyprofileInfo
INFO  [2022-03-26 17:49:00] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:00] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : {
    "apiId" : "KMS.KEY.PF.REG.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : ""
  },
  "keyProfileId" : "PRF01047"
}
INFO  [2022-03-26 17:49:00] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 72ms
INFO  [2022-03-26 17:49:00] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : RegisterKeyProfileController.registerKeyProfile()
INFO  [2022-03-26 17:49:00] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 17:49:54] [] [BaseLogging.controllerBaseLogging():36                      ] ################################################################################
INFO  [2022-03-26 17:49:54] [] [BaseLogging.controllerBaseLogging():37                      ] # START CONTROLLER: CreateSymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 17:49:54] [] [BaseLogging.controllerBaseLogging():42                      ] # REQUEST MESSAGE : {
  "apiInfo" : {
    "apiId" : "KMS.SK.REG.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "serviceId" : "8D550C3D61508DF90461D08CAEC9328BADB0D12FD2372CB215F1EC0E3A0FB227",
  "keyProfileId" : "PRF01047",
  "keyLabel" : "1234"
}
INFO  [2022-03-26 17:49:54] [] [BaseLogging.controllerBaseLogging():44                      ] # PARAM (org.springframework.validation.BeanPropertyBindingResult) : org.springframework.validation.BeanPropertyBindingResult: 0 errors
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.checkKeyProfileStatus
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@2a6d37e0, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@5a98486, com.tmonet.kms.mgmt.key.vo.KeyProfileAttrListVo@55d1f723]
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.selectKeyProfileAttrList
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : com.tmonet.kms.mgmt.common.vo.HsmServiceInfoVo@7d077b30
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.getHsmServiceInfo
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [
	apiInfo={
		apiId=HSM.SK.REG.01, 
		apiVersion=1.0.0
	}
	partitionId=authrium01, 
	cryptographicAlgorithm=des3, 
	keyLength=0
]
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.makeHsmCreateSymmetricKeyRequestData
INFO  [2022-03-26 17:49:54] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : [com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@61ee2e67, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@3a39aea, com.tmonet.kms.mgmt.common.vo.KeyAttrListVo@2f5b70b1]
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyProfileAttrListToKeyAttrList
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.setKeyAttr
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():77                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():78                         ] - Start Service: CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():84                         ] - Result Data  : null
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():85                         ] - End Service  : CreateSymmetricKeyService.storeSymmetricKeyInfo
INFO  [2022-03-26 17:49:55] [] [BaseLogging.serviceBaseLogging():86                         ] --------------------------------------------------------------------------------
INFO  [2022-03-26 17:49:55] [] [BaseLogging.controllerBaseLogging():51                      ] # RESPONSE MESSAGE: {
  "apiInfo" : {
    "apiId" : "KMS.SK.REG.01",
    "apiVersion" : {
      "major" : 1,
      "minor" : 0,
      "patch" : 0
    }
  },
  "result" : {
    "resultStatus" : "00000000",
    "errorCode" : "00000000",
    "errorMessage" : "Success"
  },
  "keyId" : "85D669A9107213E6FFBEBBE73055ABA781C07E9C95D8E008359BD7A6E22B7A35"
}
INFO  [2022-03-26 17:49:55] [] [BaseLogging.controllerBaseLogging():52                      ] # RESPONSE TIME   : 711ms
INFO  [2022-03-26 17:49:55] [] [BaseLogging.controllerBaseLogging():53                      ] # END CONTROLLER  : CreateSymmetricKeyController.createSymmetricKey()
INFO  [2022-03-26 17:49:55] [] [BaseLogging.controllerBaseLogging():54                      ] ################################################################################
INFO  [2022-03-26 17:54:12] [] [SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin.shutdown():159] Application shutdown requested.
INFO  [2022-03-26 17:54:13] [] [ExecutorConfigurationSupport.shutdown():218                 ] Shutting down ExecutorService 'applicationTaskExecutor'
INFO  [2022-03-26 17:54:13] [] [HikariDataSource.close():350                                ] HikariPool-1 - Shutdown initiated...
INFO  [2022-03-26 17:54:13] [] [HikariDataSource.close():352                                ] HikariPool-1 - Shutdown completed.
